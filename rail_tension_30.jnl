# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 0.0), point2=(
    200.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[2], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[4]))
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(200.0, 2.0))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Substrate_Layer', 
    type=DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Substrate_Layer'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Substrate_Layer'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['Substrate_Layer'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Substrate_Layer'].features['Shell planar-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    44.3164291381836, 15.0539474487305), value=200.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[3], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[4])
mdb.models['Model-1'].parts['Substrate_Layer'].features['Shell planar-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Substrate_Layer'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 2.0), 
    point2=(100.0, 4.0))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Concrete_Slab', 
    type=DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Concrete_Slab'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Substrate_Layer'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['Substrate_Layer'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Substrate_Layer'].features['Shell planar-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Concrete_Slab'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['Concrete_Slab'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Concrete_Slab'].features['Shell planar-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    23.3202819824219, 8.18062591552734), value=100.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -1.76376152038574, 2.76558780670166), value=2.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1])
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Substrate_Layer'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['Substrate_Layer'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Substrate_Layer'].features['Shell planar-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -1.89014434814453, 1.3285653591156), value=4.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[3])
mdb.models['Model-1'].parts['Substrate_Layer'].features['Shell planar-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Substrate_Layer'].regenerate()
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Concrete_Slab'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['Concrete_Slab'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Concrete_Slab'].features['Shell planar-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(100.0, 2.0), 
    point2=(200.0, 4.0))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Ballast_Layer', 
    type=DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Ballast_Layer'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Concrete_Slab'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['Concrete_Slab'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Concrete_Slab'].features['Shell planar-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    18.5694618225098, 9.91082382202148), value=100.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -0.654531478881836, 2.74232077598572), value=2.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1])
mdb.models['Model-1'].sketches['__edit__'].dimensions[1].setValues(value=0.5)
mdb.models['Model-1'].parts['Concrete_Slab'].features['Shell planar-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Concrete_Slab'].regenerate()
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 2.0), 
    point2=(100.0, 3.5))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name=
    'Substraye_Layer_2', type=DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Substraye_Layer_2'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name=
    'Ballast_Layer-1', part=mdb.models['Model-1'].parts['Ballast_Layer'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name=
    'Concrete_Slab-1', part=mdb.models['Model-1'].parts['Concrete_Slab'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name=
    'Substrate_Layer-1', part=mdb.models['Model-1'].parts['Substrate_Layer'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name=
    'Substraye_Layer_2-1', part=
    mdb.models['Model-1'].parts['Substraye_Layer_2'])
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 4.5), 
    point2=(200.0, 5.0))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='rail', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['rail'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='rail-1', part=
    mdb.models['Model-1'].parts['rail'])
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 4.0), 
    point2=(0.4, 0.5))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='traverse', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['traverse'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['traverse'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['traverse'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['traverse'].features['Shell planar-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -0.69850891828537, 2.64262819290161), value=3.5, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    0.268527716398239, 0.24997615814209), value=0.4, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2])
mdb.models['Model-1'].sketches['__edit__'].dimensions[0].setValues(value=0.5)
mdb.models['Model-1'].parts['traverse'].features['Shell planar-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['traverse'].regenerate()
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='traverse-1', 
    part=mdb.models['Model-1'].parts['traverse'])
mdb.models['Model-1'].rootAssembly.translate(instanceList=('traverse-1', ), 
    vector=(0.0, 3.5, 0.0))
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].Material(name='soil')
mdb.models['Model-1'].materials['soil'].Density(table=((1500.0, ), ))
mdb.models['Model-1'].materials['soil'].Elastic(table=((80000000.0, 0.4), ))
mdb.models['Model-1'].Material(name='ballast')
mdb.models['Model-1'].materials['ballast'].Density(table=((1400.0, ), ))
mdb.models['Model-1'].materials['soil'].density.setValues(table=((1200.0, ), ))
mdb.models['Model-1'].materials['ballast'].Elastic(table=((200000000.0, 0.0), 
    ))
mdb.models['Model-1'].materials['ballast'].elastic.setValues(table=((
    200000000.0, 3.2), ))
mdb.models['Model-1'].Material(name='concrete')
mdb.models['Model-1'].materials['concrete'].Density(table=((2500.0, ), ))
mdb.models['Model-1'].materials['concrete'].Elastic(table=((32000000000.0, 
    0.2), ))
mdb.models['Model-1'].Material(name='steel')
mdb.models['Model-1'].materials['steel'].Elastic(table=((200000000000.0, 0.2), 
    ))
mdb.models['Model-1'].materials['steel'].Density(table=((7750.0, ), ))
mdb.models['Model-1'].Material(name='traverse')
mdb.models['Model-1'].materials['traverse'].Density(table=((400.0, ), ))
mdb.models['Model-1'].materials['traverse'].Elastic(table=((40000000000.0, 
    0.2), ))
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].HomogeneousSolidSection(material='ballast', name=
    'Section-1', thickness=None)
mdb.models['Model-1'].HomogeneousSolidSection(material='concrete', name=
    'Section-2', thickness=None)
mdb.models['Model-1'].HomogeneousSolidSection(material='soil', name='Section-3'
    , thickness=None)
mdb.models['Model-1'].HomogeneousSolidSection(material='steel', name=
    'Section-4', thickness=None)
mdb.models['Model-1'].HomogeneousSolidSection(material='traverse', name=
    'Section-5', thickness=None)
mdb.models['Model-1'].sections.changeKey(fromName='Section-1', toName=
    'Section-Ballast')
mdb.models['Model-1'].sections.changeKey(fromName='Section-2', toName=
    'Section-Concrete')
mdb.models['Model-1'].sections.changeKey(fromName='Section-5', toName=
    'Section-Traverse')
mdb.models['Model-1'].sections.changeKey(fromName='Section-4', toName=
    'Section-Steel')
mdb.models['Model-1'].sections.changeKey(fromName='Section-3', toName=
    'Section-Soil')
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['Ballast_Layer'].Set(faces=
    mdb.models['Model-1'].parts['Ballast_Layer'].faces.getSequenceFromMask((
    '[#1 ]', ), ), name='Set-1')
mdb.models['Model-1'].parts['Ballast_Layer'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Ballast_Layer'].sets['Set-1'], sectionName=
    'Section-Ballast', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Concrete_Slab'].Set(faces=
    mdb.models['Model-1'].parts['Concrete_Slab'].faces.getSequenceFromMask((
    '[#1 ]', ), ), name='Set-1')
mdb.models['Model-1'].parts['Concrete_Slab'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Concrete_Slab'].sets['Set-1'], sectionName=
    'Section-Concrete', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Substrate_Layer'].Set(faces=
    mdb.models['Model-1'].parts['Substrate_Layer'].faces.getSequenceFromMask((
    '[#1 ]', ), ), name='Set-1')
mdb.models['Model-1'].parts['Substrate_Layer'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Substrate_Layer'].sets['Set-1'], sectionName=
    'Section-Soil', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Substraye_Layer_2'].Set(faces=
    mdb.models['Model-1'].parts['Substraye_Layer_2'].faces.getSequenceFromMask(
    ('[#1 ]', ), ), name='Set-1')
mdb.models['Model-1'].parts['Substraye_Layer_2'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Substraye_Layer_2'].sets['Set-1'], 
    sectionName='Section-Soil', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['rail'].regenerate()
mdb.models['Model-1'].parts['rail'].Set(faces=
    mdb.models['Model-1'].parts['rail'].faces.getSequenceFromMask(('[#1 ]', ), 
    ), name='Set-1')
mdb.models['Model-1'].parts['rail'].SectionAssignment(offset=0.0, offsetField=
    '', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['rail'].sets['Set-1'], sectionName=
    'Section-Steel', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['traverse'].Set(faces=
    mdb.models['Model-1'].parts['traverse'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['traverse'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['traverse'].sets['Set-1'], sectionName=
    'Section-Traverse', thicknessAssignment=FROM_SECTION)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.openAcis('C:/Users/mofid/Downloads/geogrid.sat', scaleFromFile=OFF)
mdb.models['Model-1'].PartFromGeometryFile(combine=False, dimensionality=
    THREE_D, geometryFile=mdb.acis, name='geogrid', type=DEFORMABLE_BODY)
del mdb.models['Model-1'].parts['geogrid']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-30.0, 15.0), 
    point2=(-25.0, 20.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-25.0, 20.0), 
    point2=(-20.3345985412598, 20.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-20.3345985412598, 
    20.0), point2=(-15.0, 15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-15.0, 15.0), 
    point2=(-19.6863882644859, 10.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-19.6863882644859, 
    10.0), point2=(-24.7473812103271, 10.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-24.7473812103271, 
    10.0), point2=(-30.0, 15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-15.0, 15.0), 
    point2=(-10.1971130371094, 15.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[8])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.1971130371094, 
    15.0), point2=(-5.0, 10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-5.0, 10.0), point2=
    (-10.0, 4.80288696307878))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[9], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[10])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.0, 
    4.80288696307878), point2=(-14.6098976135254, 4.80288696307878))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[11])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-14.6098976135254, 
    4.80288696307878), point2=(-19.6863882644859, 10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-19.6863882644859, 
    10.0), point2=(-24.7473812103271, 10.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[13])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-24.7473812103271, 
    10.0), point2=(-28.75, 5.0))
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[14], ))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-24.7473812103271, 
    10.0), point2=(-30.0, 5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-30.0, 5.0), point2=
    (-25.2404693735543, 0.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[15], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[16])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-25.2404693735543, 
    0.0), point2=(-20.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[17])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-20.0, 0.0), point2=
    (-14.6098976135254, 4.80288696307878))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-14.6098976135254, 
    4.80288696307878), point2=(-10.0, 4.80288696307878))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[19])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.0, 
    4.80288696307878), point2=(-5.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-5.0, 0.0), point2=(
    -9.80288696288983, -5.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[20], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[21])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-9.80288696288983, 
    -5.0), point2=(-14.9676933288574, -5.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[22])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-14.9676933288574, 
    -5.0), point2=(-20.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-20.0, 0.0), point2=
    (-25.2404693735543, 0.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[24])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-25.2404693735543, 
    0.0), point2=(-30.0, -5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-30.0, -5.0), 
    point2=(-25.0, -9.75953062637154))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[25], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[26])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-25.0, 
    -9.75953062637154), point2=(-20.0960655212402, -9.75953062637154))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[27])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-20.0960655212402, 
    -9.75953062637154), point2=(-14.9676933288574, -5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-14.9676933288574, 
    -5.0), point2=(-9.80288696288983, -5.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[29])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-9.80288696288983, 
    -5.0), point2=(-5.0, -10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-5.0, -10.0), 
    point2=(-10.0, -14.8028869629895))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[30], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[31])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.0, 
    -14.8028869629895), point2=(-14.8484268188477, -14.8028869629895))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[32])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-14.8484268188477, 
    -14.8028869629895), point2=(-20.0960655212402, -9.75953062637154))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.1971130371094, 
    15.0), point2=(-5.0, 20.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-5.0, 20.0), point2=
    (0.178897857666016, 20.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[35])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.178897857666016, 
    20.0), point2=(5.0, 15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.0, 15.0), point2=(
    0.0, 10.1788978576866))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[36], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[37])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 
    10.1788978576866), point2=(-5.0, 10.0))
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[37], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[38]))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.0, 15.0), point2=(
    -0.185536265909946, 10.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[36], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[39])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-0.185536265909946, 
    10.0), point2=(-5.0, 10.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[40])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-5.0, 10.0), point2=
    (-0.185536265909946, 10.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[41])
mdb.models['Model-1'].sketches['__profile__'].ParallelConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__profile__'].geometry[40], 
    entity2=mdb.models['Model-1'].sketches['__profile__'].geometry[41])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-0.185536265909946, 
    10.0), point2=(5.0, 5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.0, 5.0), point2=(
    0.17889785770069, 0.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[42], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[43])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.17889785770069, 
    0.0), point2=(-5.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[44])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.17889785770069, 
    0.0), point2=(5.36443412340736, -5.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[43], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[45])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.36443412340736, 
    -5.0), point2=(0.543331980870789, -10.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[45], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[46])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.543331980870789, 
    -10.0), point2=(-5.0, -10.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[47])
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-25.0, 10.0), 
    point2=(-20.0, 15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-20.0, 15.0), 
    point2=(-14.9676933288574, 15.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-14.9676933288574, 
    15.0), point2=(-10.0, 10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.0, 10.0), 
    point2=(-15.0325167724767, 5.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-15.0325167724767, 
    5.0), point2=(-19.4997444152832, 5.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-19.4997444152832, 
    5.0), point2=(-25.0, 10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-19.4997444152832, 
    5.0), point2=(-25.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-25.0, 0.0), point2=
    (-20.4547566717232, -5.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[8], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[9])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-20.4547566717232, 
    -5.0), point2=(-15.0869598388672, -5.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[10])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-15.0869598388672, 
    -5.0), point2=(-10.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.0, 0.0), point2=
    (-15.0325167724767, 5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.0, 10.0), 
    point2=(-5.06874084472656, 10.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[13])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-5.06874084472656, 
    10.0), point2=(0.0, 5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 5.0), point2=(
    -5.0, -0.0687408448344513))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[14], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[15])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-5.0, 
    -0.0687408448344513), point2=(-10.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-5.0, 
    -0.0687408448344513), point2=(0.0, -5.00093224412012))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[15], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[17])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 
    -5.00093224412012), point2=(-4.93127179781345, -10.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[17], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[18])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-4.93127179781345, 
    -10.0), point2=(-9.95858383178711, -10.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[19])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-9.95858383178711, 
    -10.0), point2=(-15.0869598388672, -5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 5.0), point2=(
    5.0, 5.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[21])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.0, 5.0), point2=(
    10.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.0, 0.0), point2=(
    5.0, -5.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[22], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[23])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.0, -5.0), point2=(
    0.0, -5.00093224412012))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-20.4547566717232, 
    -5.0), point2=(-25.128128536162, -9.24832245754078))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[9], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[25])
mdb.models['Model-1'].sketches['__profile__'].redo()
#* Nothing to redo.
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[25], ))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-5.06874084472656, 
    10.0), point2=(0.0, 15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 15.0), point2=(
    -5.0, 20.0687408444234))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[26], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[27])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-5.0, 
    20.0687408444234), point2=(-9.78574371337891, 20.0687408444234))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[28])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-9.78574371337891, 
    20.0687408444234), point2=(-14.9676933288574, 15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 15.0), point2=(
    4.76453018188477, 15.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[30])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(4.76453018188477, 
    15.0), point2=(10.0, 10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.0, 10.0), point2=
    (5.0, 5.0))
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-20.0, 15.0), 
    point2=(-15.0, 15.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-15.0, 15.0), 
    point2=(-10.0, 10.0))
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[2], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[4]))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-20.0, 20.0), 
    point2=(0.0, 20.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 20.0), point2=(
    15.0, 10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(15.0, 10.0), point2=
    (0.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 0.0), point2=(
    -20.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[7])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-20.0, 0.0), point2=
    (-35.0, 10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-35.0, 10.0), 
    point2=(-20.0, 20.0))
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='geogrid', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['geogrid'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['geogrid'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['geogrid'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['geogrid'].features['Shell planar-1'])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-20.0, 20.0), point2=(
    -35.0, 30.0))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-35.0, 30.0), point2=(
    -20.0, 40.0))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-20.0, 40.0), point2=(
    0.0, 40.0))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[12])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(0.0, 40.0), point2=(
    15.0, 30.0))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(15.0, 30.0), point2=(
    0.0, 20.0))
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[10], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[11], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[12], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[13], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[14], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[27]))
mdb.models['Model-1'].parts['geogrid'].features['Shell planar-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['geogrid'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['geogrid'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['geogrid'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['geogrid'].features['Shell planar-1'])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(15.0, 10.0), point2=(
    30.0, 20.0))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(30.0, 20.0), point2=(
    50.0, 20.0))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[16])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(50.0, 20.0), point2=(
    65.0, 10.0))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(65.0, 10.0), point2=(
    50.0, 0.0))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(50.0, 0.0), point2=(
    30.0, 0.0))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[19])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(30.0, 0.0), point2=(
    15.0, 10.0))
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[16], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[17], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[18], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[19], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[36], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[43]))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[15], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[20]))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(20.0, 10.0), point2=(
    35.0, 20.0))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(35.0, 20.0), point2=(
    55.0, 20.0))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[22])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(55.0, 20.0), point2=(
    70.0, 10.0))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(70.0, 10.0), point2=(
    55.0, 0.0))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(55.0, 0.0), point2=(
    35.0, 0.0))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[25])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(35.0, 0.0), point2=(
    20.0, 10.0))
mdb.models['Model-1'].parts['geogrid'].features['Shell planar-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['geogrid'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['geogrid'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['geogrid'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['geogrid'].features['Shell planar-1'])
mdb.models['Model-1'].sketches['__edit__'].linearPattern(angle1=0.0, angle2=
    90.0, geomList=(mdb.models['Model-1'].sketches['__edit__'].geometry[4], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[5], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[6], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[7], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[8], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[9]), number1=10, 
    number2=10, spacing1=50.0, spacing2=20.0, vertexList=())
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[81], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[82], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[86], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[87], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[88], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[92], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[93], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[94], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[98], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[99], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[100], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[104], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[105], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[106], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[110], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[111], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[112], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[116], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[117], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[118], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[122], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[123], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[124], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[128], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[129], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[130], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[134], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[135], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[136], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[140], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[141], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[142], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[143], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[144], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[145], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[146], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[147], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[148], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[149], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[150], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[151], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[152], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[153], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[154], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[155], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[156], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[157], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[158], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[159], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[160], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[161], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[162], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[163], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[164], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[165], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[166], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[167], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[168], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[169], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[170], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[171], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[172], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[173], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[174], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[175], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[176], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[177], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[178], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[179], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[180], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[181], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[182], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[183], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[184], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[185], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[186], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[187], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[188], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[189], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[190], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[191], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[192], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[193], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[194], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[195], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[196], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[197], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[198], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[199], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[200], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[201], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[202], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[203], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[204], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[205], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[206], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[207], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[208], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[209], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[210], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[211], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[212], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[213], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[214], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[215], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[216], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[217], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[218], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[219], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[220], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[221], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[222], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[223], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[224], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[225], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[226], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[227], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[228], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[229], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[230], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[231], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[232], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[233], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[234], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[235], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[236], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[237], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[238], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[239], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[240], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[241], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[242], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[243], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[244], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[245], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[246], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[247], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[248], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[249], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[250], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[251], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[252], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[253], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[254], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[255], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[256], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[257], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[258], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[259], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[260], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[261], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[262], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[263], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[264], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[265], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[266], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[267], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[268], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[269], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[270], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[271], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[272], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[273], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[274], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[275], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[276], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[277], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[278], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[279], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[280], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[281], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[282], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[283], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[284], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[285], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[286], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[287], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[288], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[289], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[290], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[291], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[292], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[293], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[294], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[295], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[296], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[297], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[298], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[299], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[300], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[301], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[302], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[303], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[304], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[305], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[306], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[307], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[308], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[309], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[310], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[311], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[312], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[313], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[314], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[315], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[316], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[317], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[318], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[319], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[320], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[321], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[322], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[323], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[324], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[325], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[326], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[327], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[328], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[329], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[330], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[331], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[332], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[333], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[334], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[335], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[336], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[337], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[338], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[339], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[340], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[341], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[342], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[343], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[344], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[345], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[346], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[347], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[348], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[349], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[350], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[351], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[352], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[353], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[354], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[355], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[356], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[357], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[358], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[359], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[360], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[361], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[362], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[363], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[364], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[365], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[366], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[367], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[368], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[369], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[370], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[371], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[372], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[373], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[374], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[375], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[376], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[377], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[378], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[379], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[380], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[381], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[382], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[383], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[384], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[385], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[386], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[387], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[388], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[389], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[390], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[391], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[392], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[393], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[394], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[395], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[396], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[397], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[398], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[399], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[400], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[401], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[402], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[403], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[404], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[405], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[406], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[407], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[408], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[409], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[410], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[411], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[412], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[413], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[414], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[415], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[416], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[417], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[418], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[419], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[420], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[421], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[422], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[423], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[424], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[425], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[426], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[427], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[428], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[429], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[430], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[431], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[432], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[433], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[434], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[435], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[436], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[437], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[438], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[439], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[440], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[441], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[442], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[443], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[444], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[445], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[446], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[447], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[448], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[449], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[450], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[451], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[452], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[453], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[454], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[455], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[456], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[457], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[458], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[459], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[460], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[461], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[462], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[463], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[464], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[465], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[466], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[467], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[468], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[469], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[470], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[471], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[472], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[473], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[474], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[475], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[476], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[477], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[478], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[479], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[480], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[481], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[482], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[483], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[484], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[485], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[486], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[487], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[488], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[489], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[490], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[491], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[492], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[493], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[494], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[495], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[496], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[497], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[498], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[499], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[500], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[501], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[502], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[503], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[504], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[505], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[506], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[507], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[508], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[509], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[510], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[511], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[512], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[513], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[514], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[515], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[516], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[517], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[518], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[519], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[520], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[521], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[522], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[523], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[524], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[525], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[526], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[527], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[528], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[529], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[530], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[531], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[532], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[533], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[534], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[535], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[536], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[537], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[538], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[539], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[540], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[541], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[542], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[543], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[544], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[545], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[546], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[547], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[548], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[549], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[550], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[551], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[552], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[553], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[554], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[555], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[556], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[557], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[558], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[559], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[560], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[561], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[562], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[563], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[564], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[565], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[566], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[567], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[568], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[569], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[570], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[571], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[572], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[573], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[574], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[575], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[576], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[577], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[578], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[579], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[580], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[581], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[582], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[583], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[584], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[585], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[586], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[587], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[588], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[589], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[590], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[591], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[592], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[593], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[594], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[595], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[596], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[597], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[598], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[599], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[600], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[601], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[602], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[603], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[604], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[605], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[606], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[607], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[608], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[609], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[610], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[611], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[612], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[613], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[614], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[615], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[616], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[617], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[618], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[619], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[620], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[9], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[50], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[62], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[76], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[90], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[104], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[118], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[132], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[146], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[160], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[174], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[188], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[195], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[202], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[209], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[216], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[223], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[230], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[237], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[244], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[251], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[258], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[265], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[272], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[279], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[286], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[293], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[300], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[307], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[314], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[321], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[328], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[335], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[342], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[349], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[356], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[363], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[370], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[377], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[384], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[391], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[398], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[405], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[412], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[419], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[426], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[433], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[440], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[447], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[454], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[461], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[468], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[475], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[482], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[489], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[496], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[503], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[510], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[517], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[524], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[531], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[538], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[545], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[552], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[559], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[566], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[573], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[580], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[587], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[594], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[601], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[608], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[615], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[622], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[629], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[636], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[643], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[650], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[657], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[664], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[671], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[678], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[685], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[692], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[699], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[706], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[713], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[720], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[727], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[734], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[741], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[748], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[755], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[762], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[769], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[776], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[783], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[790], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[797], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[804], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[811], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[818], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[825], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[832], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[839], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[846], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[853], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[860], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[867], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[874], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[881], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[888], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[895], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[902], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[909], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[916], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[923], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[930], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[937], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[944], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[951], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[958], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[965], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[972], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[979], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[986], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[993], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1000], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1007], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1014], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1021], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1028], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1035], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1042], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1049], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1056], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1063], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1070], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1077], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1084], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1091], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1098], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1105], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1112], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1119], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1126], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1133], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1140], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1147], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1154], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1161], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1168], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1175], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1182], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1189], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1196], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1203], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1210], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1217], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1224], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1231], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1238], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1245], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1252], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1259], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1266], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1273], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1280], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1287], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1294], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1301], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1308], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1315], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1322], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1329], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1336], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1343], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1350], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1357], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1364], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1371], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1378], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1385], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1392], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1399], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1406], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1413], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1420], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1427], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1434], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1441]))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[85], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[137], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[4], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[5], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[6], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[7], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[8], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[9], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[21], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[22], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[23], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[24], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[25], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[26], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[27], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[28], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[29], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[30], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[31], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[32], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[33], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[34], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[35], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[36], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[37], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[38], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[39], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[40], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[41], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[42], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[43], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[44], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[45], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[46], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[47], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[48], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[49], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[50], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[51], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[52], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[53], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[54], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[55], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[56], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[57], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[58], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[59], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[60], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[61], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[62], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[63], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[64], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[65], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[66], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[67], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[68], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[69], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[70], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[71], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[72], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[73], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[74], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[75], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[76], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[77], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[78], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[79], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[80], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[83], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[84], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[89], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[90], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[91], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[95], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[96], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[97], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[101], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[102], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[103], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[107], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[108], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[109], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[113], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[114], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[115], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[119], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[120], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[121], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[125], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[126], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[127], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[131], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[132], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[133], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[138], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[139], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[16], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[57], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[69], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[83], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[97], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[111], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[125], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[139], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[153], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[167], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[181]))
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['geogrid'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['geogrid'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['geogrid'].features['Shell planar-1'])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[21], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[22], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[23], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[24], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[25], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[26], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[50], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[57]))
mdb.models['Model-1'].parts['geogrid'].features['Shell planar-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['geogrid'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['geogrid'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['geogrid'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['geogrid'].features['Shell planar-1'])
mdb.models['Model-1'].sketches['__edit__'].linearPattern(angle1=0.0, angle2=
    90.0, geomList=(mdb.models['Model-1'].sketches['__edit__'].geometry[4], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[5], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[6], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[7], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[8], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[9]), number1=14, 
    number2=14, spacing1=52.0, spacing2=21.0, vertexList=())
mdb.models['Model-1'].parts['geogrid'].features['Shell planar-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['geogrid'].regenerate()
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].Material(name='geocell')
mdb.models['Model-1'].materials['geocell'].Density(table=((990.0, ), ))
mdb.models['Model-1'].materials['geocell'].Elastic(table=((21000000.0, 0.41), 
    ))
del mdb.models['Model-1'].parts['Ballast_Layer'].sectionAssignments[0]
del mdb.models['Model-1'].parts['Ballast_Layer'].sets['Set-1']
del mdb.models['Model-1'].parts['Concrete_Slab'].sets['Set-1']
del mdb.models['Model-1'].parts['Concrete_Slab'].sectionAssignments[0]
del mdb.models['Model-1'].parts['Substrate_Layer'].sets['Set-1']
del mdb.models['Model-1'].parts['Substrate_Layer'].sectionAssignments[0]
del mdb.models['Model-1'].parts['Substraye_Layer_2'].sets['Set-1']
del mdb.models['Model-1'].parts['Substraye_Layer_2'].sectionAssignments[0]
del mdb.models['Model-1'].sections['Section-Ballast']
del mdb.models['Model-1'].sections['Section-Concrete']
del mdb.models['Model-1'].sections['Section-Soil']
del mdb.models['Model-1'].sections['Section-Steel']
del mdb.models['Model-1'].sections['Section-Traverse']
mdb.models['Model-1'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='ballast', name='Section-1', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.5, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Model-1'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='concrete', name='Section-2', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.5, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Model-1'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='geocell', name='Section-3', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.5, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Model-1'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='soil', name='Section-4', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.5, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Model-1'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='Section-5', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.5, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Model-1'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='traverse', name='Section-6', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.5, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Model-1'].sections.changeKey(fromName='Section-1', toName=
    'Section-ballast')
mdb.models['Model-1'].sections.changeKey(fromName='Section-2', toName=
    'Section-Concrete')
mdb.models['Model-1'].sections.changeKey(fromName='Section-6', toName=
    'Section-Traverse')
mdb.models['Model-1'].sections.changeKey(fromName='Section-5', toName=
    'Section-Steel')
mdb.models['Model-1'].sections.changeKey(fromName='Section-4', toName=
    'Section-Soil')
mdb.models['Model-1'].sections.changeKey(fromName='Section-3', toName=
    'Section-Geocell')
mdb.models['Model-1'].parts['Ballast_Layer'].Set(faces=
    mdb.models['Model-1'].parts['Ballast_Layer'].faces.getSequenceFromMask((
    '[#1 ]', ), ), name='Set-1')
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].sections['Section-Concrete'].setValues(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='concrete', 
    nodalThicknessField='', numIntPts=5, preIntegrate=OFF, thickness=0.4, 
    thicknessField='', thicknessType=UNIFORM)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].HomogeneousSolidSection(material='ballast', name=
    'Section-7', thickness=None)
mdb.models['Model-1'].HomogeneousSolidSection(material='concrete', name=
    'Section-8', thickness=None)
mdb.models['Model-1'].HomogeneousSolidSection(material='geocell', name=
    'Section-9', thickness=None)
mdb.models['Model-1'].HomogeneousSolidSection(material='soil', name=
    'Section-10', thickness=None)
mdb.models['Model-1'].HomogeneousSolidSection(material='steel', name=
    'Section-11', thickness=None)
mdb.models['Model-1'].HomogeneousSolidSection(material='traverse', name=
    'Section-12', thickness=None)
mdb.models['Model-1'].sections.changeKey(fromName='Section-7', toName=
    'Section-ballast-')
mdb.models['Model-1'].sections.changeKey(fromName='Section-11', toName=
    'Section-Steel-')
mdb.models['Model-1'].sections.changeKey(fromName='Section-8', toName=
    'Section-Concrete-')
mdb.models['Model-1'].sections.changeKey(fromName='Section-9', toName=
    'Section-Geocell-')
mdb.models['Model-1'].sections.changeKey(fromName='Section-10', toName=
    'Section-Soil-')
mdb.models['Model-1'].sections.changeKey(fromName='Section-12', toName=
    'Section-Traverse-')
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['Model-1'].parts['Ballast_Layer'].sets['Set-1']
mdb.models['Model-1'].parts['Ballast_Layer'].Set(faces=
    mdb.models['Model-1'].parts['Ballast_Layer'].faces.getSequenceFromMask((
    '[#1 ]', ), ), name='Set-1')
mdb.models['Model-1'].parts['Ballast_Layer'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Ballast_Layer'].sets['Set-1'], sectionName=
    'Section-ballast-', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Concrete_Slab'].Set(faces=
    mdb.models['Model-1'].parts['Concrete_Slab'].faces.getSequenceFromMask((
    '[#1 ]', ), ), name='Set-1')
mdb.models['Model-1'].parts['Concrete_Slab'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Concrete_Slab'].sets['Set-1'], sectionName=
    'Section-Concrete-', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Substrate_Layer'].Set(faces=
    mdb.models['Model-1'].parts['Substrate_Layer'].faces.getSequenceFromMask((
    '[#1 ]', ), ), name='Set-1')
mdb.models['Model-1'].parts['Substrate_Layer'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Substrate_Layer'].sets['Set-1'], sectionName=
    'Section-Soil-', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Substraye_Layer_2'].Set(faces=
    mdb.models['Model-1'].parts['Substraye_Layer_2'].faces.getSequenceFromMask(
    ('[#1 ]', ), ), name='Set-1')
mdb.models['Model-1'].parts['Substraye_Layer_2'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Substraye_Layer_2'].sets['Set-1'], 
    sectionName='Section-Soil-', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['geogrid'].Set(faces=
    mdb.models['Model-1'].parts['geogrid'].faces.getSequenceFromMask((
    '[#ffffffff:6 #f ]', ), ), name='Set-1')
mdb.models['Model-1'].parts['geogrid'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['geogrid'].sets['Set-1'], sectionName=
    'Section-Geocell-', thicknessAssignment=FROM_SECTION)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.LinearInstancePattern(direction1=(1.0, 0.0, 
    0.0), direction2=(0.0, 1.0, 0.0), instanceList=('traverse-1', ), number1=
    364, number2=1, spacing1=0.55, spacing2=0.5)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].materials['ballast'].density.setValues(table=((1900.0, ), 
    ))
mdb.models['Model-1'].materials['ballast'].elastic.setValues(table=((
    300000000.0, 0.3), ))
mdb.models['Model-1'].materials['concrete'].elastic.setValues(table=((
    21000000000.0, 0.15), ))
mdb.models['Model-1'].materials['steel'].density.setValues(table=((7850.0, ), 
    ))
mdb.models['Model-1'].materials['steel'].elastic.setValues(table=((
    210000000000.0, 0.3), ))
mdb.models['Model-1'].materials['traverse'].density.setValues(table=((2500.0, 
    ), ))
mdb.models['Model-1'].materials['traverse'].elastic.setValues(table=((
    29000000000.0, 0.2), ))
mdb.models['Model-1'].materials['soil'].density.setValues(table=((1950.0, ), ))
mdb.models['Model-1'].materials['soil'].elastic.setValues(table=((95000000.0, 
    0.33), ))
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['Ballast_Layer'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=5.0)
mdb.models['Model-1'].parts['Ballast_Layer'].generateMesh()
mdb.models['Model-1'].parts['Concrete_Slab'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=5.0)
mdb.models['Model-1'].parts['Concrete_Slab'].generateMesh()
mdb.models['Model-1'].parts['Substrate_Layer'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=10.0)
mdb.models['Model-1'].parts['Substrate_Layer'].generateMesh()
mdb.models['Model-1'].parts['Substraye_Layer_2'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=5.0)
mdb.models['Model-1'].parts['Substraye_Layer_2'].generateMesh()
mdb.models['Model-1'].parts['geogrid'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=2.0)
mdb.models['Model-1'].parts['geogrid'].generateMesh()
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Substrate_Layer'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['Substrate_Layer'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Substrate_Layer'].features['Shell planar-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['geogrid'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['geogrid'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['geogrid'].features['Shell planar-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    664.276123046875, -26.4758605957031), value=20.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[99], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[100])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    609.186401367188, -48.4330444335938), value=18.0277563773199, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[100], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[101])
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].sketches['__edit__'].dimensions[1].setValues(value=1.8)
mdb.models['Model-1'].sketches['__edit__'].dimensions[0].setValues(value=2)
mdb.models['Model-1'].parts['geogrid'].features['Shell planar-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['geogrid'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['geogrid'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['geogrid'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['geogrid'].features['Shell planar-1'])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[4], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[5], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[6], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[7], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[8], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[9], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[27], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[28], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[29], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[30], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[31], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[32], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[33], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[34], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[35], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[36], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[37], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[38], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[39], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[40], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[41], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[42], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[43], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[44], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[45], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[46], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[47], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[48], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[49], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[50], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[51], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[52], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[53], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[54], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[55], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[56], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[57], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[58], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[59], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[60], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[61], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[62], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[63], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[64], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[65], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[66], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[67], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[68], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[69], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[70], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[71], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[72], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[73], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[74], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[75], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[76], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[77], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[78], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[79], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[80], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[81], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[82], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[83], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[84], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[85], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[86], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[87], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[88], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[89], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[90], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[91], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[92], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[93], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[94], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[95], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[96], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[97], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[98], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[99], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[100], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[101], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[102], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[103], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[104], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[105], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[106], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[107], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[108], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[109], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[110], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[111], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[112], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[113], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[114], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[115], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[116], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[117], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[118], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[119], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[120], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[121], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[122], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[123], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[124], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[125], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[126], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[127], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[128], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[129], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[130], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[131], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[132], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[133], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[134], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[135], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[136], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[137], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[138], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[139], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[140], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[141], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[142], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[143], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[144], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[145], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[146], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[147], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[148], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[149], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[150], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[151], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[152], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[153], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[154], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[155], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[156], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[157], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[158], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[159], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[160], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[161], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[162], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[163], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[164], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[165], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[166], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[167], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[168], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[169], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[170], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[171], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[172], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[173], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[174], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[175], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[176], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[177], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[178], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[179], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[180], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[181], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[182], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[183], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[184], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[185], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[186], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[187], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[188], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[189], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[190], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[191], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[192], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[193], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[194], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[195], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[196], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[197], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[198], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[199], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[200], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[201], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[202], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[203], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[204], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[205], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[206], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[207], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[208], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[209], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[210], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[211], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[212], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[213], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[214], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[215], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[216], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[217], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[218], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[219], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[220], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[221], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[222], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[223], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[224], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[225], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[226], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[227], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[228], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[229], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[230], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[231], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[232], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[233], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[234], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[235], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[236], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[237], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[238], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[239], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[240], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[241], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[242], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[243], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[244], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[245], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[246], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[247], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[248], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[249], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[250], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[251], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[252], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[253], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[254], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[255], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[256], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[257], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[258], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[259], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[260], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[261], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[262], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[263], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[264], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[265], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[266], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[267], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[268], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[269], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[270], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[271], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[272], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[273], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[274], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[275], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[276], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[277], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[278], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[279], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[280], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[281], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[282], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[283], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[284], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[285], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[286], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[287], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[288], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[289], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[290], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[291], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[292], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[293], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[294], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[295], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[296], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[297], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[298], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[299], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[300], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[301], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[302], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[303], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[304], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[305], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[306], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[307], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[308], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[309], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[310], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[311], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[312], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[313], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[314], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[315], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[316], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[317], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[318], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[319], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[320], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[321], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[322], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[323], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[324], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[325], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[326], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[327], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[328], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[329], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[330], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[331], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[332], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[333], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[334], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[335], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[336], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[337], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[338], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[339], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[340], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[341], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[342], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[343], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[344], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[345], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[346], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[347], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[348], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[349], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[350], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[351], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[352], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[353], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[354], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[355], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[356], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[357], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[358], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[359], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[360], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[361], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[362], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[363], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[364], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[365], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[366], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[367], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[368], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[369], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[370], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[371], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[372], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[373], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[374], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[375], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[376], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[377], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[378], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[379], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[380], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[381], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[382], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[383], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[384], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[385], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[386], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[387], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[388], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[389], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[390], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[391], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[392], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[393], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[394], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[395], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[396], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[397], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[398], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[399], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[400], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[401], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[402], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[403], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[404], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[405], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[406], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[407], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[408], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[409], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[410], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[411], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[412], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[413], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[414], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[415], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[416], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[417], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[418], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[419], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[420], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[421], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[422], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[423], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[424], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[425], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[426], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[427], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[428], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[429], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[430], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[431], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[432], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[433], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[434], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[435], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[436], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[437], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[438], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[439], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[440], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[441], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[442], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[443], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[444], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[445], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[446], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[447], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[448], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[449], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[450], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[451], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[452], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[453], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[454], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[455], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[456], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[457], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[458], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[459], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[460], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[461], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[462], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[463], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[464], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[465], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[466], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[467], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[468], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[469], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[470], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[471], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[472], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[473], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[474], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[475], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[476], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[477], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[478], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[479], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[480], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[481], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[482], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[483], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[484], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[485], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[486], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[487], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[488], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[489], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[490], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[491], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[492], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[493], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[494], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[495], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[496], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[497], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[498], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[499], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[500], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[501], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[502], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[503], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[504], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[505], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[506], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[507], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[508], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[509], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[510], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[511], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[512], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[513], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[514], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[515], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[516], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[517], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[518], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[519], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[520], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[521], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[522], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[523], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[524], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[525], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[526], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[527], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[528], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[529], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[530], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[531], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[532], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[533], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[534], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[535], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[536], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[537], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[538], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[539], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[540], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[541], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[542], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[543], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[544], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[545], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[546], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[547], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[548], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[549], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[550], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[551], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[552], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[553], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[554], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[555], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[556], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[557], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[558], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[559], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[560], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[561], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[562], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[563], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[564], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[565], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[566], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[567], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[568], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[569], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[570], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[571], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[572], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[573], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[574], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[575], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[576], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[577], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[578], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[579], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[580], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[581], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[582], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[583], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[584], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[585], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[586], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[587], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[588], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[589], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[590], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[591], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[592], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[593], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[594], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[595], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[596], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[597], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[598], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[599], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[600], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[601], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[602], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[603], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[604], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[605], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[606], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[607], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[608], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[609], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[610], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[611], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[612], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[613], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[614], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[615], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[616], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[617], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[618], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[619], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[620], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[621], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[622], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[623], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[624], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[625], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[626], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[627], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[628], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[629], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[630], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[631], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[632], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[633], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[634], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[635], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[636], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[637], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[638], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[639], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[640], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[641], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[642], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[643], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[644], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[645], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[646], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[647], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[648], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[649], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[650], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[651], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[652], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[653], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[654], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[655], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[656], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[657], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[658], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[659], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[660], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[661], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[662], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[663], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[664], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[665], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[666], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[667], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[668], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[669], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[670], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[671], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[672], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[673], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[674], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[675], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[676], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[677], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[678], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[679], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[680], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[681], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[682], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[683], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[684], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[685], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[686], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[687], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[688], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[689], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[690], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[691], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[692], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[693], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[694], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[695], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[696], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[697], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[698], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[699], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[700], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[701], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[702], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[703], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[704], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[705], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[706], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[707], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[708], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[709], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[710], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[711], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[712], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[713], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[714], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[715], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[716], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[717], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[718], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[719], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[720], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[721], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[722], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[723], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[724], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[725], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[726], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[727], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[728], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[729], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[730], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[731], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[732], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[733], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[734], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[735], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[736], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[737], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[738], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[739], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[740], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[741], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[742], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[743], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[744], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[745], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[746], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[747], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[748], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[749], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[750], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[751], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[752], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[753], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[754], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[755], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[756], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[757], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[758], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[759], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[760], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[761], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[762], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[763], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[764], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[765], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[766], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[767], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[768], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[769], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[770], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[771], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[772], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[773], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[774], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[775], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[776], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[777], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[778], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[779], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[780], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[781], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[782], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[783], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[784], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[785], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[786], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[787], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[788], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[789], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[790], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[791], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[792], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[793], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[794], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[795], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[796], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[797], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[798], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[799], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[800], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[801], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[802], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[803], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[804], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[805], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[806], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[807], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[808], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[809], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[810], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[811], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[812], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[813], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[814], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[815], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[816], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[817], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[818], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[819], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[820], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[821], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[822], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[823], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[824], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[825], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[826], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[827], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[828], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[829], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[830], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[831], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[832], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[833], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[834], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[835], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[836], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[837], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[838], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[839], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[840], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[841], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[842], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[843], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[844], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[845], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[846], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[847], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[848], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[849], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[850], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[851], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[852], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[853], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[854], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[855], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[856], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[857], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[858], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[859], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[860], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[861], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[862], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[863], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[864], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[865], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[866], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[867], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[868], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[869], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[870], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[871], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[872], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[873], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[874], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[875], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[876], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[877], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[878], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[879], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[880], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[881], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[882], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[883], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[884], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[885], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[886], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[887], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[888], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[889], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[890], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[891], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[892], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[893], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[894], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[895], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[896], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[897], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[898], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[899], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[900], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[901], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[902], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[903], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[904], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[905], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[906], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[907], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[908], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[909], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[910], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[911], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[912], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[913], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[914], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[915], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[916], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[917], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[918], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[919], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[920], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[921], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[922], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[923], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[924], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[925], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[926], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[927], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[928], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[929], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[930], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[931], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[932], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[933], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[934], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[935], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[936], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[937], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[938], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[939], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[940], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[941], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[942], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[943], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[944], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[945], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[946], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[947], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[948], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[949], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[950], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[951], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[952], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[953], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[954], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[955], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[956], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[957], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[958], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[959], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[960], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[961], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[962], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[963], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[964], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[965], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[966], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[967], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[968], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[969], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[970], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[971], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[972], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[973], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[974], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[975], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[976], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[977], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[978], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[979], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[980], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[981], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[982], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[983], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[984], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[985], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[986], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[987], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[988], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[989], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[990], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[991], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[992], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[993], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[994], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[995], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[996], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[997], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[998], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[999], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1000], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1001], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1002], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1003], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1004], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1005], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1006], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1007], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1008], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1009], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1010], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1011], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1012], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1013], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1014], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1015], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1016], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1017], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1018], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1019], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1020], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1021], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1022], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1023], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1024], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1025], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1026], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1027], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1028], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1029], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1030], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1031], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1032], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1033], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1034], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1035], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1036], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1037], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1038], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1039], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1040], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1041], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1042], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1043], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1044], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1045], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1046], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1047], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1048], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1049], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1050], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1051], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1052], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1053], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1054], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1055], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1056], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1057], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1058], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1059], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1060], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1061], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1062], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1063], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1064], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1065], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1066], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1067], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1068], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1069], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1070], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1071], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1072], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1073], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1074], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1075], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1076], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1077], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1078], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1079], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1080], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1081], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1082], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1083], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1084], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1085], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1086], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1087], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1088], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1089], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1090], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1091], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1092], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1093], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1094], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1095], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1096], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1097], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1098], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1099], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1100], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1101], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1102], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1103], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1104], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1105], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1106], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1107], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1108], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1109], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1110], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1111], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1112], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1113], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1114], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1115], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1116], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1117], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1118], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1119], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1120], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1121], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1122], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1123], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1124], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1125], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1126], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1127], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1128], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1129], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1130], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1131], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1132], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1133], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1134], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1135], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1136], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1137], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1138], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1139], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1140], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1141], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1142], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1143], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1144], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1145], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1146], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1147], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1148], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1149], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1150], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1151], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1152], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1153], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1154], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1155], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1156], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1157], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1158], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1159], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1160], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1161], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1162], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1163], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1164], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1165], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1166], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1167], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1168], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1169], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1170], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1171], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1172], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1173], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1174], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1175], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1176], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1177], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1178], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1179], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1180], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1181], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1182], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1183], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1184], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1185], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1186], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1187], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1188], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1189], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1190], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1191], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1192], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1193], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1194], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1195], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1196], 
    mdb.models['Model-1'].sketches['__edit__'].dimensions[0], 
    mdb.models['Model-1'].sketches['__edit__'].dimensions[1], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[9], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[16], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[62], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[69], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[76], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[83], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[90], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[97], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[104], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[111], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[118], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[125], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[132], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[139], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[146], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[153], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[160], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[167], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[174], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[181], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[188], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[195], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[202], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[209], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[216], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[223], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[230], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[237], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[244], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[251], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[258], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[265], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[272], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[279], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[286], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[293], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[300], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[307], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[314], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[321], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[328], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[335], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[342], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[349], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[356], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[363], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[370], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[377], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[384], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[391], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[398], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[405], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[412], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[419], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[426], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[433], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[440], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[447], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[454], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[461], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[468], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[475], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[482], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[489], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[496], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[503], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[510], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[517], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[524], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[531], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[538], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[545], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[552], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[559], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[566], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[573], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[580], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[587], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[594], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[601], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[608], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[615], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[622], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[629], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[636], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[643], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[650], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[657], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[664], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[671], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[678], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[685], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[692], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[699], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[706], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[713], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[720], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[727], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[734], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[741], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[748], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[755], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[762], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[769], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[776], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[783], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[790], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[797], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[804], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[811], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[818], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[825], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[832], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[839], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[846], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[853], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[860], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[867], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[874], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[881], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[888], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[895], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[902], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[909], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[916], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[923], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[930], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[937], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[944], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[951], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[958], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[965], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[972], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[979], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[986], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[993], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1000], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1007], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1014], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1021], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1028], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1035], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1042], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1049], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1056], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1063], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1070], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1077], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1084], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1091], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1098], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1105], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1112], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1119], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1126], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1133], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1140], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1147], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1154], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1161], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1168], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1175], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1182], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1189], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1196], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1203], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1210], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1217], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1224], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1231], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1238], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1245], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1252], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1259], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1266], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1273], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1280], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1287], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1294], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1301], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1308], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1315], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1322], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1329], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1336], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1343], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1350], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1357], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1364], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1371], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1378], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1385], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1392], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1399], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1406], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1413], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1420], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1427], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1434], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1441], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1448], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1455], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1462], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1469], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1476], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1483], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1490], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1497], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1504], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1511], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1518], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1525], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1532], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1539], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1546], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1553], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1560], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1567], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1574], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1581], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1588], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1595], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1602], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1609], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1616], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1623], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1630], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1637], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1644], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1651], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1658], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1665], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1672], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1679], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1686], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1693], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1700], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1707], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1714], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1721], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1728], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1735], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1742], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1749], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1756], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1763], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1770], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1777], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1784], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1791], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1798], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1805], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1812], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1819], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1826], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1833], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1840], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1847], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1854], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1861], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1868], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1875], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1882], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1889], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1896], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1903], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1910], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1917], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1924], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1931], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1938], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1945], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1952], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1959], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1966], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1973], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1980], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1987], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1994], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2001], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2008], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2015], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2022], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2029], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2036], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2043], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2050], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2057], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2064], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2071], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2078], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2085], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2092], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2099], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2106], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2113], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2120], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2127], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2134], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2141], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2148], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2155], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2162], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2169], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2176], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2183], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2190], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2197], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2204], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2211], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2218], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2225], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2232], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2239], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2246], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2253], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2260], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2267], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2274], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2281], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2288], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2295], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2302], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2309], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2316], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2323], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2330], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2337], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2344], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2351], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2358], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2365], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2372], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2379], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2386], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2393], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2400], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2407], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2414], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2421], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2428], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2435], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2442], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2449], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2456], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2463], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2470], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2477], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2484], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2491], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2498], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2505], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2512], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2519], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2526], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2533], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2540], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2547], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2554], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2561], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2568], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2575], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2582], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2589], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2596], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2603], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2610], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2617], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2624], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2631], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2638], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2645], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2652], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2659], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2666], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2673], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2680], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2687], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2694], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2701], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2708], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2715], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2722], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2729], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2736], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2743], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2750], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2757], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2764], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2771], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2778], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2785]))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(0.0, 0.0), point2=(5.0, 
    5.0))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(5.0, 5.0), point2=(
    10.0, 5.0))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[1198])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[1197], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1198]))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(0.0, 1.25), point2=(
    1.25, 2.5))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(1.25, 2.5), point2=(
    2.5, 2.5))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[1200])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(2.5, 2.5), point2=(
    3.75, 1.25))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(3.75, 1.25), point2=(
    2.5, 0.0))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[1201], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[1202])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(2.5, 0.0), point2=(
    1.25, 0.0))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[1203])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(1.25, 0.0), point2=(
    0.0, 1.25))
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['geogrid'].features['Shell planar-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['geogrid'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['geogrid'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['geogrid'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['geogrid'].features['Shell planar-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    1.69598436355591, -0.563351631164551), value=1.25, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1201], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1202])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -0.255006313323975, 0.286098957061768), value=1.76776695296637, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1202], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1197])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -0.512683868408203, 2.44665813446045), value=1.76776695296637, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1197], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1198])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    1.64076805114746, 3.48077201843262), value=1.25, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1198], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1199])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    4.18073654174805, 2.0588653087616), value=1.76776695296637, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1199], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1200])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    3.75740909576416, -0.194025278091431), value=1.76776695296637, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1200], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1201])
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].sketches['__edit__'].dimensions[2].setValues(value=0.25)
mdb.models['Model-1'].sketches['__edit__'].dimensions[4].setValues(value=
    0.76776695297)
mdb.models['Model-1'].sketches['__edit__'].dimensions[5].setValues(value=0.25)
mdb.models['Model-1'].sketches['__edit__'].dimensions[6].setValues(value=
    0.76776695297)
mdb.models['Model-1'].sketches['__edit__'].dimensions[7].setValues(value=
    0.76776695297)
mdb.models['Model-1'].sketches['__edit__'].dimensions[3].setValues(value=
    0.76776695297)
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[1199], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1200], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1201], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1202], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1203], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1204], 
    mdb.models['Model-1'].sketches['__edit__'].dimensions[2], 
    mdb.models['Model-1'].sketches['__edit__'].dimensions[3], 
    mdb.models['Model-1'].sketches['__edit__'].dimensions[4], 
    mdb.models['Model-1'].sketches['__edit__'].dimensions[5], 
    mdb.models['Model-1'].sketches['__edit__'].dimensions[6], 
    mdb.models['Model-1'].sketches['__edit__'].dimensions[7], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2799], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2804], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2807]))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(5.03150081634521, 
    0.469695448875427), point2=(5.39843702316284, 1.23883724212646))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(5.39843702316284, 
    1.23883724212646), point2=(5.91194772720337, 1.23883724212646))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[1206])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(5.91194772720337, 
    1.23883724212646), point2=(6.2362699508667, 0.544665694236755))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(6.2362699508667, 
    0.544665694236755), point2=(5.83086681365967, -0.00307905673980713))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(5.83086681365967, 
    -0.00307905673980713), point2=(5.44167995452881, -0.00307905673980713))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[1209])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(5.44167995452881, 
    -0.00307905673980713), point2=(5.03150081634521, 0.469695448875427))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[1205], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1206], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1207], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1208], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1209], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1210], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2814], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[2821]))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(4.98762845993042, 
    0.60432106256485), point2=(5.42005825042725, 1.23341393470764))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(5.42005825042725, 
    1.23341393470764), point2=(5.84167766571045, 1.23341393470764))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[1212])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(5.84167766571045, 
    1.23341393470764), point2=(6.24167585372925, 0.642283499240875))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(6.24167585372925, 
    0.642283499240875), point2=(5.84167766571045, -0.00307905673980713))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(5.84167766571045, 
    -0.00307905673980713), point2=(5.45249080657959, -0.00307905673980713))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[1215])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(5.45249080657959, 
    -0.00307905673980713), point2=(4.98762845993042, 0.60432106256485))
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['geogrid'].features['Shell planar-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['geogrid'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['geogrid'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['geogrid'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['geogrid'].features['Shell planar-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    4.78805541992188, 1.11509263515472), value=0.763382843329608, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1209], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1210])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    5.66555118560791, -0.242178082466125), value=0.38918685913086, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1213], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1214])
mdb.models['Model-1'].sketches['__edit__'].linearPattern(angle1=0.0, angle2=
    90.0, geomList=(mdb.models['Model-1'].sketches['__edit__'].geometry[1211], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1212], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1213], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1214], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1215], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1216]), number1=20, 
    number2=1, spacing1=1.3, spacing2=20.0, vertexList=())
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['geogrid'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['geogrid'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['geogrid'].features['Shell planar-1'])
mdb.models['Model-1'].sketches['__edit__'].linearPattern(angle1=0.0, angle2=
    90.0, geomList=(mdb.models['Model-1'].sketches['__edit__'].geometry[1211], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1212], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1213], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1214], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1215], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[1216]), number1=10, 
    number2=10, spacing1=1.3, spacing2=1.3, vertexList=())
mdb.models['Model-1'].parts['geogrid'].features['Shell planar-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['geogrid'].regenerate()
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['geogrid'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['geogrid'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['geogrid'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['geogrid'].features['Shell planar-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].parts['geogrid'].generateMesh()
mdb.models['Model-1'].parts['geogrid'].deleteMesh()
mdb.models['Model-1'].parts['geogrid'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.5)
mdb.models['Model-1'].parts['geogrid'].generateMesh()
mdb.models['Model-1'].parts['geogrid'].deleteMesh()
mdb.models['Model-1'].parts['geogrid'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.05)
mdb.models['Model-1'].parts['geogrid'].generateMesh()
mdb.models['Model-1'].parts['rail'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=10.0)
mdb.models['Model-1'].parts['rail'].generateMesh()
mdb.models['Model-1'].parts['traverse'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.05)
mdb.models['Model-1'].parts['traverse'].generateMesh()
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].ImplicitDynamicsStep(initialInc=1e-06, maxInc=0.008, 
    minInc=1e-15, name='Step-1', previous='Initial')
mdb.models['Model-1'].ContactProperty('IntProp-1')
mdb.models['Model-1'].interactionProperties['IntProp-1'].TangentialBehavior(
    dependencies=0, directionality=ISOTROPIC, elasticSlipStiffness=None, 
    formulation=PENALTY, fraction=0.005, maximumElasticSlip=FRACTION, 
    pressureDependency=OFF, shearStressLimit=None, slipRateDependency=OFF, 
    table=((0.35, ), ), temperatureDependency=OFF)
mdb.models['Model-1'].interactionProperties['IntProp-1'].NormalBehavior(
    allowSeparation=ON, constraintEnforcementMethod=DEFAULT, 
    pressureOverclosure=HARD)
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-rail-bottom', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['rail-1'].edges.getSequenceFromMask(
    ('[#1 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-rail-top', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['rail-1'].edges.getSequenceFromMask(
    ('[#4 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-Concrete-top', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Concrete_Slab-1'].edges.getSequenceFromMask(
    ('[#4 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-Concrete-bottom', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Concrete_Slab-1'].edges.getSequenceFromMask(
    ('[#1 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-ballast-top', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Ballast_Layer-1'].edges.getSequenceFromMask(
    ('[#4 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-ballast-bottom', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Ballast_Layer-1'].edges.getSequenceFromMask(
    ('[#1 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-traverse-top', 
    side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['traverse-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-2-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-3-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-4-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-5-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-6-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-7-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-8-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-9-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-10-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-11-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-12-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-13-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-14-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-15-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-16-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-17-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-18-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-19-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-20-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-21-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-22-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-23-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-24-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-25-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-26-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-27-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-28-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-29-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-30-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-31-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-32-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-33-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-34-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-35-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-36-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-37-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-38-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-39-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-40-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-41-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-42-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-43-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-44-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-45-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-46-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-47-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-48-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-49-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-50-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-51-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-52-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-53-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-54-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-55-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-56-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-57-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-58-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-59-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-60-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-61-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-62-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-63-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-64-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-65-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-66-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-67-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-68-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-69-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-70-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-71-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-72-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-73-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-74-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-75-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-76-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-77-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-78-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-79-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-80-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-81-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-82-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-83-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-84-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-85-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-86-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-87-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-88-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-89-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-90-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-91-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-92-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-93-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-94-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-95-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-96-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-97-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-98-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-99-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-100-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-101-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-102-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-103-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-104-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-105-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-106-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-107-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-108-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-109-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-110-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-111-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-112-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-113-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-114-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-115-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-116-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-117-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-118-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-119-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-120-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-121-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-122-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-123-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-124-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-125-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-126-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-127-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-128-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-129-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-130-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-131-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-132-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-133-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-134-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-135-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-136-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-137-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-138-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-139-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-140-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-141-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-142-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-143-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-144-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-145-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-146-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-147-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-148-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-149-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-150-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-151-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-152-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-153-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-154-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-155-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-156-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-157-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-158-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-159-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-160-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-161-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-162-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-163-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-164-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-165-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-166-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-167-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-168-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-169-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-170-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-171-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-172-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-173-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-174-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-175-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-176-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-177-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-178-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-179-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-180-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-181-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-182-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-183-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-184-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-185-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-186-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-187-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-188-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-189-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-190-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-191-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-192-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-193-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-194-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-195-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-196-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-197-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-198-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-199-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-200-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-201-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-202-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-203-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-204-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-205-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-206-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-207-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-208-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-209-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-210-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-211-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-212-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-213-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-214-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-215-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-216-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-217-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-218-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-219-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-220-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-221-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-222-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-223-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-224-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-225-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-226-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-227-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-228-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-229-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-230-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-231-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-232-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-233-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-234-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-235-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-236-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-237-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-238-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-239-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-240-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-241-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-242-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-243-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-244-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-245-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-246-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-247-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-248-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-249-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-250-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-251-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-252-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-253-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-254-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-255-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-256-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-257-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-258-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-259-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-260-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-261-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-262-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-263-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-264-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-265-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-266-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-267-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-268-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-269-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-270-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-271-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-272-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-273-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-274-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-275-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-276-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-277-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-278-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-279-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-280-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-281-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-282-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-283-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-284-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-285-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-286-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-287-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-288-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-289-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-290-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-291-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-292-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-293-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-294-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-295-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-296-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-297-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-298-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-299-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-300-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-301-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-302-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-303-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-304-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-305-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-306-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-307-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-308-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-309-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-310-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-311-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-312-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-313-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-314-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-315-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-316-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-317-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-318-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-319-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-320-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-321-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-322-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-323-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-324-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-325-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-326-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-327-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-328-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-329-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-330-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-331-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-332-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-333-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-334-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-335-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-336-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-337-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-338-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-339-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-340-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-341-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-342-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-343-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-344-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-345-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-346-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-347-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-348-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-349-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-350-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-351-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-352-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-353-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-354-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-355-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-356-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-357-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-358-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-359-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-360-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-361-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-362-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-363-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-364-1'].edges.getSequenceFromMask(
    mask=('[#f ]', ), ))
mdb.models['Model-1'].SurfaceToSurfaceContactStd(adjustMethod=NONE, 
    clearanceRegion=None, createStepName='Step-1', datumAxis=None, 
    initialClearance=OMIT, interactionProperty='IntProp-1', main=
    mdb.models['Model-1'].rootAssembly.surfaces['Surf-Concrete-bottom'], name=
    'Int-1', secondary=
    mdb.models['Model-1'].rootAssembly.surfaces['Surf-traverse-top'], sliding=
    FINITE, thickness=ON)
mdb.models['Model-1'].interactions['Int-1'].setValues(adjustMethod=NONE, 
    bondingSet=None, contactTracking=TWO_CONFIG, enforcement=SURFACE_TO_SURFACE
    , initialClearance=OMIT, main=
    mdb.models['Model-1'].rootAssembly.surfaces['Surf-Concrete-top'], sliding=
    FINITE, thickness=ON)
mdb.models['Model-1'].SurfaceToSurfaceContactStd(adjustMethod=NONE, 
    clearanceRegion=None, createStepName='Step-1', datumAxis=None, 
    initialClearance=OMIT, interactionProperty='IntProp-1', main=
    mdb.models['Model-1'].rootAssembly.surfaces['Surf-ballast-top'], name=
    'Int-2', secondary=
    mdb.models['Model-1'].rootAssembly.surfaces['Surf-traverse-top'], sliding=
    FINITE, thickness=ON)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=1115000.0, name='Load-1', 
    region=mdb.models['Model-1'].rootAssembly.surfaces['Surf-rail-top'])
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['Substrate_Layer-1'].edges.getSequenceFromMask(
    mask=('[#8 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Substraye_Layer_2-1'].edges.getSequenceFromMask(
    mask=('[#8 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Concrete_Slab-1'].edges.getSequenceFromMask(
    mask=('[#8 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1'].edges.getSequenceFromMask(
    mask=('[#2 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['rail-1'].edges.getSequenceFromMask(
    mask=('[#8 ]', ), ), name='Set-1')
mdb.models['Model-1'].rootAssembly.sets.changeKey(fromName='Set-1', toName=
    'Set-Left-Side')
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['Substrate_Layer-1'].edges.getSequenceFromMask(
    mask=('[#2 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Ballast_Layer-1'].edges.getSequenceFromMask(
    mask=('[#2 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['traverse-1-lin-364-1'].edges.getSequenceFromMask(
    mask=('[#8 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['rail-1'].edges.getSequenceFromMask(
    mask=('[#2 ]', ), ), name='Set-Right-Side')
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['Substrate_Layer-1'].edges.getSequenceFromMask(
    ('[#1 ]', ), ), name='Set-Bottom-Side')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['Model-1'].rootAssembly.sets['Set-Left-Side'])
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['Model-1'].rootAssembly.sets['Set-Right-Side'])
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-3', region=mdb.models['Model-1'].rootAssembly.sets['Set-Bottom-Side'])
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, numThreadsPerMpiProcess=1, queue=None, resultsFormat=
    ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=0, 
    waitMinutes=0)
del mdb.models['Model-1'].parts['rail'].sectionAssignments[0]
del mdb.models['Model-1'].parts['rail'].sets['Set-1']
mdb.models['Model-1'].parts['rail'].Set(faces=
    mdb.models['Model-1'].parts['rail'].faces.getSequenceFromMask(('[#1 ]', ), 
    ), name='Set-1')
mdb.models['Model-1'].parts['rail'].SectionAssignment(offset=0.0, offsetField=
    '', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['rail'].sets['Set-1'], sectionName=
    'Section-Steel-', thicknessAssignment=FROM_SECTION)
del mdb.models['Model-1'].parts['traverse'].sets['Set-1']
del mdb.models['Model-1'].parts['traverse'].sectionAssignments[0]
mdb.models['Model-1'].parts['traverse'].Set(faces=
    mdb.models['Model-1'].parts['traverse'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['traverse'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['traverse'].sets['Set-1'], sectionName=
    'Section-Traverse-', thicknessAssignment=FROM_SECTION)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 8568, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1e-06, 'attempts': 1, 
    'timeIncrement': 1e-06, 'increment': 1, 'stepTime': 1e-06, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2e-06, 'attempts': 1, 
    'timeIncrement': 1e-06, 'increment': 2, 'stepTime': 2e-06, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.5e-06, 'attempts': 1, 
    'timeIncrement': 1.5e-06, 'increment': 3, 'stepTime': 3.5e-06, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 5.75e-06, 'attempts': 1, 
    'timeIncrement': 2.25e-06, 'increment': 4, 'stepTime': 5.75e-06, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 9.125e-06, 'attempts': 1, 
    'timeIncrement': 3.375e-06, 'increment': 5, 'stepTime': 9.125e-06, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.41875e-05, 'attempts': 1, 
    'timeIncrement': 5.0625e-06, 'increment': 6, 'stepTime': 1.41875e-05, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.178125e-05, 'attempts': 1, 
    'timeIncrement': 7.59375e-06, 'increment': 7, 'stepTime': 2.178125e-05, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.3171875e-05, 'attempts': 1, 
    'timeIncrement': 1.1390625e-05, 'increment': 8, 'stepTime': 3.3171875e-05, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 5.02578125e-05, 'attempts': 1, 
    'timeIncrement': 1.70859375e-05, 'increment': 9, 
    'stepTime': 5.02578125e-05, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Ballast_Layer'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['Ballast_Layer'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Ballast_Layer'].features['Shell planar-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Concrete_Slab'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['Concrete_Slab'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Concrete_Slab'].features['Shell planar-1'])
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 7.588671875e-05, 
    'attempts': 1, 'timeIncrement': 2.562890625e-05, 'increment': 10, 
    'stepTime': 7.588671875e-05, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
del mdb.models['Model-1'].sketches['__edit__']
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000114330078125, 
    'attempts': 1, 'timeIncrement': 3.8443359375e-05, 'increment': 11, 
    'stepTime': 0.000114330078125, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0001719951171875, 
    'attempts': 1, 'timeIncrement': 5.76650390625e-05, 'increment': 12, 
    'stepTime': 0.0001719951171875, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['geogrid'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['geogrid'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['geogrid'].features['Shell planar-1'])
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00025849267578125, 
    'attempts': 1, 'timeIncrement': 8.649755859375e-05, 'increment': 13, 
    'stepTime': 0.00025849267578125, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
del mdb.models['Model-1'].sketches['__edit__']
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000388239013671875, 
    'attempts': 1, 'timeIncrement': 0.000129746337890625, 'increment': 14, 
    'stepTime': 0.000388239013671875, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000582858520507813, 
    'attempts': 1, 'timeIncrement': 0.000194619506835938, 'increment': 15, 
    'stepTime': 0.000582858520507813, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000874787780761719, 
    'attempts': 1, 'timeIncrement': 0.000291929260253906, 'increment': 16, 
    'stepTime': 0.000874787780761719, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00131268167114258, 
    'attempts': 1, 'timeIncrement': 0.000437893890380859, 'increment': 17, 
    'stepTime': 0.00131268167114258, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00196952250671387, 
    'attempts': 1, 'timeIncrement': 0.000656840835571289, 'increment': 18, 
    'stepTime': 0.00196952250671387, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0029547837600708, 
    'attempts': 1, 'timeIncrement': 0.000985261253356934, 'increment': 19, 
    'stepTime': 0.0029547837600708, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0044326756401062, 
    'attempts': 1, 'timeIncrement': 0.0014778918800354, 'increment': 20, 
    'stepTime': 0.0044326756401062, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0066495134601593, 
    'attempts': 1, 'timeIncrement': 0.0022168378200531, 'increment': 21, 
    'stepTime': 0.0066495134601593, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00997477019023895, 
    'attempts': 1, 'timeIncrement': 0.00332525673007965, 'increment': 22, 
    'stepTime': 0.00997477019023895, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0149626552853584, 
    'attempts': 1, 'timeIncrement': 0.00498788509511948, 'increment': 23, 
    'stepTime': 0.0149626552853584, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0224444829280376, 
    'attempts': 1, 'timeIncrement': 0.00748182764267922, 'increment': 24, 
    'stepTime': 0.0224444829280376, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0304444829280376, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 25, 
    'stepTime': 0.0304444829280376, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis interrupted by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].TabularAmplitude(data=((0.0, 0.0), (1.0, 1.0)), name=
    'Amp-1', smooth=SOLVER_DEFAULT, timeSpan=STEP)
mdb.models['Model-1'].loads['Load-1'].setValues(amplitude='Amp-1')
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 2932, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1e-06, 'attempts': 1, 
    'timeIncrement': 1e-06, 'increment': 1, 'stepTime': 1e-06, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2e-06, 'attempts': 1, 
    'timeIncrement': 1e-06, 'increment': 2, 'stepTime': 2e-06, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.5e-06, 'attempts': 1, 
    'timeIncrement': 1.5e-06, 'increment': 3, 'stepTime': 3.5e-06, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 5.75e-06, 'attempts': 1, 
    'timeIncrement': 2.25e-06, 'increment': 4, 'stepTime': 5.75e-06, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 9.125e-06, 'attempts': 1, 
    'timeIncrement': 3.375e-06, 'increment': 5, 'stepTime': 9.125e-06, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.41875e-05, 'attempts': 1, 
    'timeIncrement': 5.0625e-06, 'increment': 6, 'stepTime': 1.41875e-05, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.178125e-05, 'attempts': 1, 
    'timeIncrement': 7.59375e-06, 'increment': 7, 'stepTime': 2.178125e-05, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.3171875e-05, 'attempts': 1, 
    'timeIncrement': 1.1390625e-05, 'increment': 8, 'stepTime': 3.3171875e-05, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 5.02578125e-05, 'attempts': 1, 
    'timeIncrement': 1.70859375e-05, 'increment': 9, 
    'stepTime': 5.02578125e-05, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 7.588671875e-05, 
    'attempts': 1, 'timeIncrement': 2.562890625e-05, 'increment': 10, 
    'stepTime': 7.588671875e-05, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000114330078125, 
    'attempts': 1, 'timeIncrement': 3.8443359375e-05, 'increment': 11, 
    'stepTime': 0.000114330078125, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0001719951171875, 
    'attempts': 1, 'timeIncrement': 5.76650390625e-05, 'increment': 12, 
    'stepTime': 0.0001719951171875, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00025849267578125, 
    'attempts': 1, 'timeIncrement': 8.649755859375e-05, 'increment': 13, 
    'stepTime': 0.00025849267578125, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000388239013671875, 
    'attempts': 1, 'timeIncrement': 0.000129746337890625, 'increment': 14, 
    'stepTime': 0.000388239013671875, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000582858520507813, 
    'attempts': 1, 'timeIncrement': 0.000194619506835938, 'increment': 15, 
    'stepTime': 0.000582858520507813, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000874787780761719, 
    'attempts': 1, 'timeIncrement': 0.000291929260253906, 'increment': 16, 
    'stepTime': 0.000874787780761719, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00131268167114258, 
    'attempts': 1, 'timeIncrement': 0.000437893890380859, 'increment': 17, 
    'stepTime': 0.00131268167114258, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00196952250671387, 
    'attempts': 1, 'timeIncrement': 0.000656840835571289, 'increment': 18, 
    'stepTime': 0.00196952250671387, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0029547837600708, 
    'attempts': 1, 'timeIncrement': 0.000985261253356934, 'increment': 19, 
    'stepTime': 0.0029547837600708, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0044326756401062, 
    'attempts': 1, 'timeIncrement': 0.0014778918800354, 'increment': 20, 
    'stepTime': 0.0044326756401062, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0066495134601593, 
    'attempts': 1, 'timeIncrement': 0.0022168378200531, 'increment': 21, 
    'stepTime': 0.0066495134601593, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00997477019023895, 
    'attempts': 1, 'timeIncrement': 0.00332525673007965, 'increment': 22, 
    'stepTime': 0.00997477019023895, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0149626552853584, 
    'attempts': 1, 'timeIncrement': 0.00498788509511948, 'increment': 23, 
    'stepTime': 0.0149626552853584, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0224444829280376, 
    'attempts': 1, 'timeIncrement': 0.00748182764267922, 'increment': 24, 
    'stepTime': 0.0224444829280376, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0304444829280376, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 25, 
    'stepTime': 0.0304444829280376, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0384444829280376, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 26, 
    'stepTime': 0.0384444829280376, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0464444829280376, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 27, 
    'stepTime': 0.0464444829280376, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0544444829280376, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 28, 
    'stepTime': 0.0544444829280376, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0624444829280376, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 29, 
    'stepTime': 0.0624444829280376, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0704444829280376, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 30, 
    'stepTime': 0.0704444829280376, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0784444829280377, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 31, 
    'stepTime': 0.0784444829280377, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0864444829280377, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 32, 
    'stepTime': 0.0864444829280377, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0944444829280377, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 33, 
    'stepTime': 0.0944444829280377, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.102444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 34, 
    'stepTime': 0.102444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.110444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 35, 
    'stepTime': 0.110444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.118444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 36, 
    'stepTime': 0.118444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.126444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 37, 
    'stepTime': 0.126444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.134444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 38, 
    'stepTime': 0.134444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.142444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 39, 
    'stepTime': 0.142444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.150444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 40, 
    'stepTime': 0.150444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.158444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 41, 
    'stepTime': 0.158444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.166444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 42, 
    'stepTime': 0.166444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.174444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 43, 
    'stepTime': 0.174444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.182444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 44, 
    'stepTime': 0.182444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.190444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 45, 
    'stepTime': 0.190444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.198444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 46, 
    'stepTime': 0.198444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.206444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 47, 
    'stepTime': 0.206444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.214444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 48, 
    'stepTime': 0.214444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.222444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 49, 
    'stepTime': 0.222444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.230444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 50, 
    'stepTime': 0.230444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.238444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 51, 
    'stepTime': 0.238444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.246444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 52, 
    'stepTime': 0.246444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.254444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 53, 
    'stepTime': 0.254444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.262444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 54, 
    'stepTime': 0.262444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.270444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 55, 
    'stepTime': 0.270444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.278444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 56, 
    'stepTime': 0.278444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.286444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 57, 
    'stepTime': 0.286444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.294444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 58, 
    'stepTime': 0.294444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.302444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 59, 
    'stepTime': 0.302444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.310444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 60, 
    'stepTime': 0.310444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.318444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 61, 
    'stepTime': 0.318444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.326444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 62, 
    'stepTime': 0.326444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.334444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 63, 
    'stepTime': 0.334444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.342444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 64, 
    'stepTime': 0.342444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.350444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 65, 
    'stepTime': 0.350444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.358444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 66, 
    'stepTime': 0.358444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.366444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 67, 
    'stepTime': 0.366444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.374444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 68, 
    'stepTime': 0.374444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.382444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 69, 
    'stepTime': 0.382444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.390444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 70, 
    'stepTime': 0.390444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.398444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 71, 
    'stepTime': 0.398444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.406444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 72, 
    'stepTime': 0.406444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.414444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 73, 
    'stepTime': 0.414444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.422444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 74, 
    'stepTime': 0.422444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.430444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 75, 
    'stepTime': 0.430444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.438444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 76, 
    'stepTime': 0.438444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.446444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 77, 
    'stepTime': 0.446444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.454444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 78, 
    'stepTime': 0.454444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.462444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 79, 
    'stepTime': 0.462444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.470444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 80, 
    'stepTime': 0.470444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.478444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 81, 
    'stepTime': 0.478444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.486444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 82, 
    'stepTime': 0.486444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.494444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 83, 
    'stepTime': 0.494444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.502444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 84, 
    'stepTime': 0.502444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.510444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 85, 
    'stepTime': 0.510444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.518444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 86, 
    'stepTime': 0.518444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.526444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 87, 
    'stepTime': 0.526444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.534444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 88, 
    'stepTime': 0.534444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.542444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 89, 
    'stepTime': 0.542444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.550444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 90, 
    'stepTime': 0.550444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.558444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 91, 
    'stepTime': 0.558444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.566444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 92, 
    'stepTime': 0.566444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.574444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 93, 
    'stepTime': 0.574444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.582444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 94, 
    'stepTime': 0.582444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.590444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 95, 
    'stepTime': 0.590444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.598444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 96, 
    'stepTime': 0.598444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.606444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 97, 
    'stepTime': 0.606444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.614444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 98, 
    'stepTime': 0.614444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.622444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 99, 
    'stepTime': 0.622444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.630444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 100, 
    'stepTime': 0.630444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Too many increments needed to complete the step', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'THE ANALYSIS HAS BEEN TERMINATED DUE TO PREVIOUS ERRORS. ALL OUTPUT REQUESTS HAVE BEEN WRITTEN FOR THE LAST CONVERGED INCREMENT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].BodyForce(amplitude='Amp-1', comp1=1115000.0, 
    createStepName='Step-1', name='Load-2', region=
    mdb.models['Model-1'].rootAssembly.instances['rail-1'].sets['Set-1'])
mdb.models['Model-1'].loads['Load-1'].suppress()
mdb.models['Model-1'].loads['Load-2'].setValues(comp1=0.0, comp2=1115000.0)
mdb.models['Model-1'].loads['Load-2'].setValues(comp2=-1115000.0)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 9884, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1e-06, 'attempts': 1, 
    'timeIncrement': 1e-06, 'increment': 1, 'stepTime': 1e-06, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2e-06, 'attempts': 1, 
    'timeIncrement': 1e-06, 'increment': 2, 'stepTime': 2e-06, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.5e-06, 'attempts': 1, 
    'timeIncrement': 1.5e-06, 'increment': 3, 'stepTime': 3.5e-06, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 5.75e-06, 'attempts': 1, 
    'timeIncrement': 2.25e-06, 'increment': 4, 'stepTime': 5.75e-06, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 9.125e-06, 'attempts': 1, 
    'timeIncrement': 3.375e-06, 'increment': 5, 'stepTime': 9.125e-06, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.41875e-05, 'attempts': 1, 
    'timeIncrement': 5.0625e-06, 'increment': 6, 'stepTime': 1.41875e-05, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.178125e-05, 'attempts': 1, 
    'timeIncrement': 7.59375e-06, 'increment': 7, 'stepTime': 2.178125e-05, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.3171875e-05, 'attempts': 1, 
    'timeIncrement': 1.1390625e-05, 'increment': 8, 'stepTime': 3.3171875e-05, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 5.02578125e-05, 'attempts': 1, 
    'timeIncrement': 1.70859375e-05, 'increment': 9, 
    'stepTime': 5.02578125e-05, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 7.588671875e-05, 
    'attempts': 1, 'timeIncrement': 2.562890625e-05, 'increment': 10, 
    'stepTime': 7.588671875e-05, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000114330078125, 
    'attempts': 1, 'timeIncrement': 3.8443359375e-05, 'increment': 11, 
    'stepTime': 0.000114330078125, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0001719951171875, 
    'attempts': 1, 'timeIncrement': 5.76650390625e-05, 'increment': 12, 
    'stepTime': 0.0001719951171875, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00025849267578125, 
    'attempts': 1, 'timeIncrement': 8.649755859375e-05, 'increment': 13, 
    'stepTime': 0.00025849267578125, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000388239013671875, 
    'attempts': 1, 'timeIncrement': 0.000129746337890625, 'increment': 14, 
    'stepTime': 0.000388239013671875, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000582858520507813, 
    'attempts': 1, 'timeIncrement': 0.000194619506835938, 'increment': 15, 
    'stepTime': 0.000582858520507813, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000874787780761719, 
    'attempts': 1, 'timeIncrement': 0.000291929260253906, 'increment': 16, 
    'stepTime': 0.000874787780761719, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00131268167114258, 
    'attempts': 1, 'timeIncrement': 0.000437893890380859, 'increment': 17, 
    'stepTime': 0.00131268167114258, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00196952250671387, 
    'attempts': 1, 'timeIncrement': 0.000656840835571289, 'increment': 18, 
    'stepTime': 0.00196952250671387, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0029547837600708, 
    'attempts': 1, 'timeIncrement': 0.000985261253356934, 'increment': 19, 
    'stepTime': 0.0029547837600708, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0044326756401062, 
    'attempts': 1, 'timeIncrement': 0.0014778918800354, 'increment': 20, 
    'stepTime': 0.0044326756401062, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0066495134601593, 
    'attempts': 1, 'timeIncrement': 0.0022168378200531, 'increment': 21, 
    'stepTime': 0.0066495134601593, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00997477019023895, 
    'attempts': 1, 'timeIncrement': 0.00332525673007965, 'increment': 22, 
    'stepTime': 0.00997477019023895, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0149626552853584, 
    'attempts': 1, 'timeIncrement': 0.00498788509511948, 'increment': 23, 
    'stepTime': 0.0149626552853584, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0224444829280376, 
    'attempts': 1, 'timeIncrement': 0.00748182764267922, 'increment': 24, 
    'stepTime': 0.0224444829280376, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0304444829280376, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 25, 
    'stepTime': 0.0304444829280376, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0384444829280376, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 26, 
    'stepTime': 0.0384444829280376, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0464444829280376, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 27, 
    'stepTime': 0.0464444829280376, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0544444829280376, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 28, 
    'stepTime': 0.0544444829280376, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0624444829280376, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 29, 
    'stepTime': 0.0624444829280376, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0704444829280376, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 30, 
    'stepTime': 0.0704444829280376, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0784444829280377, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 31, 
    'stepTime': 0.0784444829280377, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0864444829280377, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 32, 
    'stepTime': 0.0864444829280377, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0944444829280377, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 33, 
    'stepTime': 0.0944444829280377, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.102444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 34, 
    'stepTime': 0.102444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.110444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 35, 
    'stepTime': 0.110444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.118444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 36, 
    'stepTime': 0.118444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.126444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 37, 
    'stepTime': 0.126444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.134444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 38, 
    'stepTime': 0.134444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.142444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 39, 
    'stepTime': 0.142444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.150444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 40, 
    'stepTime': 0.150444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.158444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 41, 
    'stepTime': 0.158444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.166444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 42, 
    'stepTime': 0.166444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.174444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 43, 
    'stepTime': 0.174444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.182444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 44, 
    'stepTime': 0.182444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.190444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 45, 
    'stepTime': 0.190444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.198444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 46, 
    'stepTime': 0.198444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.206444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 47, 
    'stepTime': 0.206444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.214444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 48, 
    'stepTime': 0.214444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.222444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 49, 
    'stepTime': 0.222444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.230444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 50, 
    'stepTime': 0.230444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.238444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 51, 
    'stepTime': 0.238444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.246444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 52, 
    'stepTime': 0.246444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.254444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 53, 
    'stepTime': 0.254444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.262444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 54, 
    'stepTime': 0.262444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.270444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 55, 
    'stepTime': 0.270444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.278444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 56, 
    'stepTime': 0.278444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.286444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 57, 
    'stepTime': 0.286444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.294444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 58, 
    'stepTime': 0.294444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.302444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 59, 
    'stepTime': 0.302444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.310444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 60, 
    'stepTime': 0.310444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.318444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 61, 
    'stepTime': 0.318444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.326444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 62, 
    'stepTime': 0.326444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.334444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 63, 
    'stepTime': 0.334444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.342444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 64, 
    'stepTime': 0.342444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.350444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 65, 
    'stepTime': 0.350444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.358444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 66, 
    'stepTime': 0.358444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.366444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 67, 
    'stepTime': 0.366444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.374444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 68, 
    'stepTime': 0.374444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.382444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 69, 
    'stepTime': 0.382444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.390444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 70, 
    'stepTime': 0.390444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.398444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 71, 
    'stepTime': 0.398444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.406444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 72, 
    'stepTime': 0.406444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.414444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 73, 
    'stepTime': 0.414444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.422444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 74, 
    'stepTime': 0.422444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.430444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 75, 
    'stepTime': 0.430444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.438444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 76, 
    'stepTime': 0.438444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.446444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 77, 
    'stepTime': 0.446444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.454444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 78, 
    'stepTime': 0.454444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.462444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 79, 
    'stepTime': 0.462444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.470444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 80, 
    'stepTime': 0.470444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.478444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 81, 
    'stepTime': 0.478444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.486444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 82, 
    'stepTime': 0.486444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.494444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 83, 
    'stepTime': 0.494444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.502444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 84, 
    'stepTime': 0.502444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.510444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 85, 
    'stepTime': 0.510444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.518444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 86, 
    'stepTime': 0.518444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.526444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 87, 
    'stepTime': 0.526444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.534444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 88, 
    'stepTime': 0.534444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.542444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 89, 
    'stepTime': 0.542444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.550444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 90, 
    'stepTime': 0.550444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.558444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 91, 
    'stepTime': 0.558444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.566444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 92, 
    'stepTime': 0.566444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.574444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 93, 
    'stepTime': 0.574444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.582444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 94, 
    'stepTime': 0.582444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.590444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 95, 
    'stepTime': 0.590444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.598444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 96, 
    'stepTime': 0.598444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.606444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 97, 
    'stepTime': 0.606444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.614444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 98, 
    'stepTime': 0.614444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.622444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 99, 
    'stepTime': 0.622444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.630444482928038, 
    'attempts': 1, 'timeIncrement': 0.008, 'increment': 100, 
    'stepTime': 0.630444482928038, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Too many increments needed to complete the step', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'THE ANALYSIS HAS BEEN TERMINATED DUE TO PREVIOUS ERRORS. ALL OUTPUT REQUESTS HAVE BEEN WRITTEN FOR THE LAST CONVERGED INCREMENT.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].materials['steel'].elastic.setValues(table=((
    210000000000.0, 0.2), ))
mdb.models['Model-1'].loads['Load-2'].suppress()
mdb.models['Model-1'].DisplacementBC(amplitude='Amp-1', createStepName='Step-1'
    , distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-4', region=
    mdb.models['Model-1'].rootAssembly.instances['rail-1'].sets['Set-1'], u1=
    UNSET, u2=-0.001, ur3=UNSET)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '4 nodes have dof on which velocity/displacement/acceleration/base motion etc. constraints are specified simultaneously. The nodes have been identified in node set ErrNodeBCRedundantDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-4'].setValues(u1=0.0, ur3=0.0)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '4 nodes have dof on which velocity/displacement/acceleration/base motion etc. constraints are specified simultaneously. The nodes have been identified in node set ErrNodeBCRedundantDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-4'].suppress()
mdb.models['Model-1'].loads['Load-2'].resume()
mdb.models['Model-1'].loads['Load-2'].setValues(comp2=-1115.0)
mdb.models['Model-1'].loads['Load-2'].suppress()
mdb.models['Model-1'].loads['Load-1'].resume()
mdb.models['Model-1'].loads['Load-1'].setValues(magnitude=1115.0)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 12732, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'memory': 175.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1e-06, 'increment': 1, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1e-06, 'stepTime': 1e-06, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2e-06, 'increment': 2, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1e-06, 'stepTime': 2e-06, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.5e-06, 'increment': 3, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.5e-06, 'stepTime': 3.5e-06, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 5.75e-06, 'increment': 4, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 2.25e-06, 'stepTime': 5.75e-06, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 9.125e-06, 'increment': 5, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 3.375e-06, 'stepTime': 9.125e-06, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.41875e-05, 'increment': 6, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 5.0625e-06, 'stepTime': 1.41875e-05, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.178125e-05, 'increment': 7, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 7.59375e-06, 'stepTime': 2.178125e-05, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.3171875e-05, 'increment': 8, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.1390625e-05, 'stepTime': 3.3171875e-05, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 5.02578125e-05, 
    'increment': 9, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.70859375e-05, 'stepTime': 5.02578125e-05, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 7.588671875e-05, 
    'increment': 10, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 2.562890625e-05, 'stepTime': 7.588671875e-05, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000114330078125, 
    'increment': 11, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 3.8443359375e-05, 'stepTime': 0.000114330078125, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0001719951171875, 
    'increment': 12, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 5.76650390625e-05, 'stepTime': 0.0001719951171875, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00025849267578125, 
    'increment': 13, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 8.649755859375e-05, 'stepTime': 0.00025849267578125, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000388239013671875, 
    'increment': 14, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.000129746337890625, 'stepTime': 0.000388239013671875, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000582858520507813, 
    'increment': 15, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.000194619506835938, 'stepTime': 0.000582858520507813, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000874787780761719, 
    'increment': 16, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.000291929260253906, 'stepTime': 0.000874787780761719, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00131268167114258, 
    'increment': 17, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.000437893890380859, 'stepTime': 0.00131268167114258, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00196952250671387, 
    'increment': 18, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.000656840835571289, 'stepTime': 0.00196952250671387, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0029547837600708, 
    'increment': 19, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.000985261253356934, 'stepTime': 0.0029547837600708, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0044326756401062, 
    'increment': 20, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.0014778918800354, 'stepTime': 0.0044326756401062, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0066495134601593, 
    'increment': 21, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.0022168378200531, 'stepTime': 0.0066495134601593, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00997477019023895, 
    'increment': 22, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.00332525673007965, 'stepTime': 0.00997477019023895, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0149626552853584, 
    'increment': 23, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.00498788509511948, 'stepTime': 0.0149626552853584, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'equilibrium': 1})
del mdb.jobs['Job-1']
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, numThreadsPerMpiProcess=1, queue=None, resultsFormat=
    ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=0, 
    waitMinutes=0)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName1\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 8896, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1e-06, 'attempts': 1, 
    'timeIncrement': 1e-06, 'increment': 1, 'stepTime': 1e-06, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2e-06, 'attempts': 1, 
    'timeIncrement': 1e-06, 'increment': 2, 'stepTime': 2e-06, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.5e-06, 'attempts': 1, 
    'timeIncrement': 1.5e-06, 'increment': 3, 'stepTime': 3.5e-06, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 5.75e-06, 'attempts': 1, 
    'timeIncrement': 2.25e-06, 'increment': 4, 'stepTime': 5.75e-06, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 9.125e-06, 'attempts': 1, 
    'timeIncrement': 3.375e-06, 'increment': 5, 'stepTime': 9.125e-06, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.41875e-05, 'attempts': 1, 
    'timeIncrement': 5.0625e-06, 'increment': 6, 'stepTime': 1.41875e-05, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.178125e-05, 'attempts': 1, 
    'timeIncrement': 7.59375e-06, 'increment': 7, 'stepTime': 2.178125e-05, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.3171875e-05, 'attempts': 1, 
    'timeIncrement': 1.1390625e-05, 'increment': 8, 'stepTime': 3.3171875e-05, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 5.02578125e-05, 'attempts': 1, 
    'timeIncrement': 1.70859375e-05, 'increment': 9, 
    'stepTime': 5.02578125e-05, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis interrupted by external signal', 'jobName': 'Job-1'})
mdb.models['Model-1'].steps['Step-1'].setValues(maxInc=DEFAULT, maxNumInc=10, 
    timePeriod=0.5)
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].amplitudes['Amp-1'].setValues(data=((0.0, 0.0), (0.25, 
    0.5), (1.0, 1.0)), smooth=SOLVER_DEFAULT, timeSpan=STEP)
mdb.models['Model-1'].amplitudes['Amp-1'].setValues(data=((0.0, 0.0), (0.25, 
    0.5), (0.5, 1.0)), smooth=SOLVER_DEFAULT, timeSpan=STEP)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName1\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 2196, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1e-06, 'attempts': 1, 
    'timeIncrement': 1e-06, 'increment': 1, 'stepTime': 1e-06, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis interrupted by external signal', 'jobName': 'Job-1'})
del mdb.jobs['Job-1']
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-12', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, numThreadsPerMpiProcess=1, queue=None, resultsFormat=
    ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=0, 
    waitMinutes=0)
mdb.jobs['Job-12'].submit(consistencyChecking=OFF)
mdb.jobs['Job-12']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-12.odb', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 7440, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-12', 'memory': 175.0})
mdb.jobs['Job-12']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 1e-06, 'attempts': 1, 
    'timeIncrement': 1e-06, 'increment': 1, 'stepTime': 1e-06, 'step': 1, 
    'jobName': 'Job-12', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 2e-06, 'attempts': 1, 
    'timeIncrement': 1e-06, 'increment': 2, 'stepTime': 2e-06, 'step': 1, 
    'jobName': 'Job-12', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 3.5e-06, 'attempts': 1, 
    'timeIncrement': 1.5e-06, 'increment': 3, 'stepTime': 3.5e-06, 'step': 1, 
    'jobName': 'Job-12', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 5.75e-06, 'attempts': 1, 
    'timeIncrement': 2.25e-06, 'increment': 4, 'stepTime': 5.75e-06, 'step': 1, 
    'jobName': 'Job-12', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 9.125e-06, 'attempts': 1, 
    'timeIncrement': 3.375e-06, 'increment': 5, 'stepTime': 9.125e-06, 
    'step': 1, 'jobName': 'Job-12', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 1.41875e-05, 'attempts': 1, 
    'timeIncrement': 5.0625e-06, 'increment': 6, 'stepTime': 1.41875e-05, 
    'step': 1, 'jobName': 'Job-12', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 2.178125e-05, 'attempts': 1, 
    'timeIncrement': 7.59375e-06, 'increment': 7, 'stepTime': 2.178125e-05, 
    'step': 1, 'jobName': 'Job-12', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 3.3171875e-05, 'attempts': 1, 
    'timeIncrement': 1.1390625e-05, 'increment': 8, 'stepTime': 3.3171875e-05, 
    'step': 1, 'jobName': 'Job-12', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 5.02578125e-05, 
    'attempts': 1, 'timeIncrement': 1.70859375e-05, 'increment': 9, 
    'stepTime': 5.02578125e-05, 'step': 1, 'jobName': 'Job-12', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 7.588671875e-05, 
    'attempts': 1, 'timeIncrement': 2.562890625e-05, 'increment': 10, 
    'stepTime': 7.588671875e-05, 'step': 1, 'jobName': 'Job-12', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Too many increments needed to complete the step', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'THE ANALYSIS HAS BEEN TERMINATED DUE TO PREVIOUS ERRORS. ALL OUTPUT REQUESTS HAVE BEEN WRITTEN FOR THE LAST CONVERGED INCREMENT.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ABORTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-12'})
mdb.models['Model-1'].steps['Step-1'].setValues(maxNumInc=100)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-12'].submit(consistencyChecking=OFF)
mdb.jobs['Job-12']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-12.odb', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 8920, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'memory': 175.0, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 1e-06, 'increment': 1, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1e-06, 'stepTime': 1e-06, 'step': 1, 'jobName': 'Job-12', 
    'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 2e-06, 'increment': 2, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1e-06, 'stepTime': 2e-06, 'step': 1, 'jobName': 'Job-12', 
    'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 3.5e-06, 'increment': 3, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.5e-06, 'stepTime': 3.5e-06, 'step': 1, 
    'jobName': 'Job-12', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 5.75e-06, 'increment': 4, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 2.25e-06, 'stepTime': 5.75e-06, 'step': 1, 
    'jobName': 'Job-12', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 9.125e-06, 'increment': 5, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 3.375e-06, 'stepTime': 9.125e-06, 'step': 1, 
    'jobName': 'Job-12', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 1.41875e-05, 'increment': 6, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 5.0625e-06, 'stepTime': 1.41875e-05, 'step': 1, 
    'jobName': 'Job-12', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 2.178125e-05, 'increment': 7, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 7.59375e-06, 'stepTime': 2.178125e-05, 'step': 1, 
    'jobName': 'Job-12', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 3.3171875e-05, 
    'increment': 8, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.1390625e-05, 'stepTime': 3.3171875e-05, 'step': 1, 
    'jobName': 'Job-12', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 5.02578125e-05, 
    'increment': 9, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 1.70859375e-05, 'stepTime': 5.02578125e-05, 'step': 1, 
    'jobName': 'Job-12', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 7.588671875e-05, 
    'increment': 10, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 2.562890625e-05, 'stepTime': 7.588671875e-05, 'step': 1, 
    'jobName': 'Job-12', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.000114330078125, 
    'increment': 11, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 3.8443359375e-05, 'stepTime': 0.000114330078125, 
    'step': 1, 'jobName': 'Job-12', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.0001719951171875, 
    'increment': 12, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 5.76650390625e-05, 'stepTime': 0.0001719951171875, 
    'step': 1, 'jobName': 'Job-12', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.00025849267578125, 
    'increment': 13, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 8.649755859375e-05, 'stepTime': 0.00025849267578125, 
    'step': 1, 'jobName': 'Job-12', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.000388239013671875, 
    'increment': 14, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.000129746337890625, 'stepTime': 0.000388239013671875, 
    'step': 1, 'jobName': 'Job-12', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.000582858520507813, 
    'increment': 15, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.000194619506835938, 'stepTime': 0.000582858520507813, 
    'step': 1, 'jobName': 'Job-12', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.000874787780761719, 
    'increment': 16, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.000291929260253906, 'stepTime': 0.000874787780761719, 
    'step': 1, 'jobName': 'Job-12', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.00131268167114258, 
    'increment': 17, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.000437893890380859, 'stepTime': 0.00131268167114258, 
    'step': 1, 'jobName': 'Job-12', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.00196952250671387, 
    'increment': 18, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.000656840835571289, 'stepTime': 0.00196952250671387, 
    'step': 1, 'jobName': 'Job-12', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.0029547837600708, 
    'increment': 19, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.000985261253356934, 'stepTime': 0.0029547837600708, 
    'step': 1, 'jobName': 'Job-12', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.0044326756401062, 
    'increment': 20, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.0014778918800354, 'stepTime': 0.0044326756401062, 
    'step': 1, 'jobName': 'Job-12', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.0066495134601593, 
    'increment': 21, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.0022168378200531, 'stepTime': 0.0066495134601593, 
    'step': 1, 'jobName': 'Job-12', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.00997477019023895, 
    'increment': 22, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.00332525673007965, 'stepTime': 0.00997477019023895, 
    'step': 1, 'jobName': 'Job-12', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.0149626552853584, 
    'increment': 23, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.00498788509511948, 'stepTime': 0.0149626552853584, 
    'step': 1, 'jobName': 'Job-12', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.0224444829280376, 
    'increment': 24, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.00748182764267922, 'stepTime': 0.0224444829280376, 
    'step': 1, 'jobName': 'Job-12', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.0336672243920565, 
    'increment': 25, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.0112227414640188, 'stepTime': 0.0336672243920565, 
    'step': 1, 'jobName': 'Job-12', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.0505013365880847, 
    'increment': 26, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.0168341121960282, 'stepTime': 0.0505013365880847, 
    'step': 1, 'jobName': 'Job-12', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.0757525048821271, 
    'increment': 27, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.0252511682940424, 'stepTime': 0.0757525048821271, 
    'step': 1, 'jobName': 'Job-12', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.113629257323191, 
    'increment': 28, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.0378767524410635, 'stepTime': 0.113629257323191, 
    'step': 1, 'jobName': 'Job-12', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.163629257323191, 
    'increment': 29, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.05, 'stepTime': 0.163629257323191, 'step': 1, 
    'jobName': 'Job-12', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.213629257323191, 
    'increment': 30, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.05, 'stepTime': 0.213629257323191, 'step': 1, 
    'jobName': 'Job-12', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.263629257323191, 
    'increment': 31, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.05, 'stepTime': 0.263629257323191, 'step': 1, 
    'jobName': 'Job-12', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.313629257323191, 
    'increment': 32, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.05, 'stepTime': 0.313629257323191, 'step': 1, 
    'jobName': 'Job-12', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.363629257323191, 
    'increment': 33, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.05, 'stepTime': 0.363629257323191, 'step': 1, 
    'jobName': 'Job-12', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.413629257323191, 
    'increment': 34, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.05, 'stepTime': 0.413629257323191, 'step': 1, 
    'jobName': 'Job-12', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.463629257323191, 
    'increment': 35, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.05, 'stepTime': 0.463629257323191, 'step': 1, 
    'jobName': 'Job-12', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.5, 'increment': 36, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.0363707426768094, 'stepTime': 0.5, 'step': 1, 
    'jobName': 'Job-12', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(JOB_COMPLETED, {'jobName': 'Job-12', 
    'time': 'Wed Dec 25 22:47:43 2024'})
mdb.models['Model-1'].loads['Load-1'].setValues(amplitude=UNSET)
del mdb.jobs['Job-12']
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, numThreadsPerMpiProcess=1, queue=None, resultsFormat=
    ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=0, 
    waitMinutes=0)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 10556, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1e-06, 'attempts': 1, 
    'timeIncrement': 1e-06, 'increment': 1, 'stepTime': 1e-06, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2e-06, 'attempts': 1, 
    'timeIncrement': 1e-06, 'increment': 2, 'stepTime': 2e-06, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.5e-06, 'attempts': 1, 
    'timeIncrement': 1.5e-06, 'increment': 3, 'stepTime': 3.5e-06, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 5.75e-06, 'attempts': 1, 
    'timeIncrement': 2.25e-06, 'increment': 4, 'stepTime': 5.75e-06, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 9.125e-06, 'attempts': 1, 
    'timeIncrement': 3.375e-06, 'increment': 5, 'stepTime': 9.125e-06, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.41875e-05, 'attempts': 1, 
    'timeIncrement': 5.0625e-06, 'increment': 6, 'stepTime': 1.41875e-05, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.178125e-05, 'attempts': 1, 
    'timeIncrement': 7.59375e-06, 'increment': 7, 'stepTime': 2.178125e-05, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.3171875e-05, 'attempts': 1, 
    'timeIncrement': 1.1390625e-05, 'increment': 8, 'stepTime': 3.3171875e-05, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 5.02578125e-05, 'attempts': 1, 
    'timeIncrement': 1.70859375e-05, 'increment': 9, 
    'stepTime': 5.02578125e-05, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 7.588671875e-05, 
    'attempts': 1, 'timeIncrement': 2.562890625e-05, 'increment': 10, 
    'stepTime': 7.588671875e-05, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000114330078125, 
    'attempts': 1, 'timeIncrement': 3.8443359375e-05, 'increment': 11, 
    'stepTime': 0.000114330078125, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0001719951171875, 
    'attempts': 1, 'timeIncrement': 5.76650390625e-05, 'increment': 12, 
    'stepTime': 0.0001719951171875, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00025849267578125, 
    'attempts': 1, 'timeIncrement': 8.649755859375e-05, 'increment': 13, 
    'stepTime': 0.00025849267578125, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000388239013671875, 
    'attempts': 1, 'timeIncrement': 0.000129746337890625, 'increment': 14, 
    'stepTime': 0.000388239013671875, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000582858520507813, 
    'attempts': 1, 'timeIncrement': 0.000194619506835938, 'increment': 15, 
    'stepTime': 0.000582858520507813, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis interrupted by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-5', region=
    mdb.models['Model-1'].rootAssembly.instances['rail-1'].sets['Set-1'])
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 11084, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1e-06, 'attempts': 1, 
    'timeIncrement': 1e-06, 'increment': 1, 'stepTime': 1e-06, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2e-06, 'attempts': 1, 
    'timeIncrement': 1e-06, 'increment': 2, 'stepTime': 2e-06, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.5e-06, 'attempts': 1, 
    'timeIncrement': 1.5e-06, 'increment': 3, 'stepTime': 3.5e-06, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 5.75e-06, 'attempts': 1, 
    'timeIncrement': 2.25e-06, 'increment': 4, 'stepTime': 5.75e-06, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 9.125e-06, 'attempts': 1, 
    'timeIncrement': 3.375e-06, 'increment': 5, 'stepTime': 9.125e-06, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.41875e-05, 'attempts': 1, 
    'timeIncrement': 5.0625e-06, 'increment': 6, 'stepTime': 1.41875e-05, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2.178125e-05, 'attempts': 1, 
    'timeIncrement': 7.59375e-06, 'increment': 7, 'stepTime': 2.178125e-05, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 3.3171875e-05, 'attempts': 1, 
    'timeIncrement': 1.1390625e-05, 'increment': 8, 'stepTime': 3.3171875e-05, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 5.02578125e-05, 'attempts': 1, 
    'timeIncrement': 1.70859375e-05, 'increment': 9, 
    'stepTime': 5.02578125e-05, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 7.588671875e-05, 
    'attempts': 1, 'timeIncrement': 2.562890625e-05, 'increment': 10, 
    'stepTime': 7.588671875e-05, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000114330078125, 
    'attempts': 1, 'timeIncrement': 3.8443359375e-05, 'increment': 11, 
    'stepTime': 0.000114330078125, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0001719951171875, 
    'attempts': 1, 'timeIncrement': 5.76650390625e-05, 'increment': 12, 
    'stepTime': 0.0001719951171875, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00025849267578125, 
    'attempts': 1, 'timeIncrement': 8.649755859375e-05, 'increment': 13, 
    'stepTime': 0.00025849267578125, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000388239013671875, 
    'attempts': 1, 'timeIncrement': 0.000129746337890625, 'increment': 14, 
    'stepTime': 0.000388239013671875, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000582858520507813, 
    'attempts': 1, 'timeIncrement': 0.000194619506835938, 'increment': 15, 
    'stepTime': 0.000582858520507813, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000874787780761719, 
    'attempts': 1, 'timeIncrement': 0.000291929260253906, 'increment': 16, 
    'stepTime': 0.000874787780761719, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00131268167114258, 
    'attempts': 1, 'timeIncrement': 0.000437893890380859, 'increment': 17, 
    'stepTime': 0.00131268167114258, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00196952250671387, 
    'attempts': 1, 'timeIncrement': 0.000656840835571289, 'increment': 18, 
    'stepTime': 0.00196952250671387, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0029547837600708, 
    'attempts': 1, 'timeIncrement': 0.000985261253356934, 'increment': 19, 
    'stepTime': 0.0029547837600708, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0044326756401062, 
    'attempts': 1, 'timeIncrement': 0.0014778918800354, 'increment': 20, 
    'stepTime': 0.0044326756401062, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0066495134601593, 
    'attempts': 1, 'timeIncrement': 0.0022168378200531, 'increment': 21, 
    'stepTime': 0.0066495134601593, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00997477019023895, 
    'attempts': 1, 'timeIncrement': 0.00332525673007965, 'increment': 22, 
    'stepTime': 0.00997477019023895, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0149626552853584, 
    'attempts': 1, 'timeIncrement': 0.00498788509511948, 'increment': 23, 
    'stepTime': 0.0149626552853584, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0224444829280376, 
    'attempts': 1, 'timeIncrement': 0.00748182764267922, 'increment': 24, 
    'stepTime': 0.0224444829280376, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0336672243920565, 
    'attempts': 1, 'timeIncrement': 0.0112227414640188, 'increment': 25, 
    'stepTime': 0.0336672243920565, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0505013365880847, 
    'attempts': 1, 'timeIncrement': 0.0168341121960282, 'increment': 26, 
    'stepTime': 0.0505013365880847, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0757525048821271, 
    'attempts': 1, 'timeIncrement': 0.0252511682940424, 'increment': 27, 
    'stepTime': 0.0757525048821271, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.113629257323191, 
    'attempts': 1, 'timeIncrement': 0.0378767524410635, 'increment': 28, 
    'stepTime': 0.113629257323191, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.163629257323191, 
    'attempts': 1, 'timeIncrement': 0.05, 'increment': 29, 
    'stepTime': 0.163629257323191, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.213629257323191, 
    'attempts': 1, 'timeIncrement': 0.05, 'increment': 30, 
    'stepTime': 0.213629257323191, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.263629257323191, 
    'attempts': 1, 'timeIncrement': 0.05, 'increment': 31, 
    'stepTime': 0.263629257323191, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.313629257323191, 
    'attempts': 1, 'timeIncrement': 0.05, 'increment': 32, 
    'stepTime': 0.313629257323191, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.363629257323191, 
    'attempts': 1, 'timeIncrement': 0.05, 'increment': 33, 
    'stepTime': 0.363629257323191, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.413629257323191, 
    'attempts': 1, 'timeIncrement': 0.05, 'increment': 34, 
    'stepTime': 0.413629257323191, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.463629257323191, 
    'attempts': 1, 'timeIncrement': 0.05, 'increment': 35, 
    'stepTime': 0.463629257323191, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.5, 'attempts': 1, 
    'timeIncrement': 0.0363707426768094, 'increment': 36, 'stepTime': 0.5, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Dec 27 01:40:31 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].steps['Step-1'].setValues(initialInc=0.0001, timePeriod=
    0.2)
mdb.models['Model-1'].amplitudes['Amp-1'].setValues(data=((0.0, 0.0), (0.2, 
    1.0)), smooth=SOLVER_DEFAULT, timeSpan=STEP)
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['rail-1'].edges.getSequenceFromMask(
    ('[#1 ]', ), ), name='Set-bottom-rail')
mdb.models['Model-1'].boundaryConditions['BC-5'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['Set-bottom-rail'])
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 3420, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0001, 'attempts': 1, 
    'timeIncrement': 0.0001, 'increment': 1, 'stepTime': 0.0001, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0002, 'attempts': 1, 
    'timeIncrement': 0.0001, 'increment': 2, 'stepTime': 0.0002, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00035, 'attempts': 1, 
    'timeIncrement': 0.00015, 'increment': 3, 'stepTime': 0.00035, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000575, 'attempts': 1, 
    'timeIncrement': 0.000225, 'increment': 4, 'stepTime': 0.000575, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0009125, 'attempts': 1, 
    'timeIncrement': 0.0003375, 'increment': 5, 'stepTime': 0.0009125, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00141875, 'attempts': 1, 
    'timeIncrement': 0.00050625, 'increment': 6, 'stepTime': 0.00141875, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.002178125, 'attempts': 1, 
    'timeIncrement': 0.000759375, 'increment': 7, 'stepTime': 0.002178125, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0033171875, 'attempts': 1, 
    'timeIncrement': 0.0011390625, 'increment': 8, 'stepTime': 0.0033171875, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00502578125, 'attempts': 1, 
    'timeIncrement': 0.00170859375, 'increment': 9, 'stepTime': 0.00502578125, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.007588671875, 'attempts': 1, 
    'timeIncrement': 0.002562890625, 'increment': 10, 
    'stepTime': 0.007588671875, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0114330078125, 
    'attempts': 1, 'timeIncrement': 0.0038443359375, 'increment': 11, 
    'stepTime': 0.0114330078125, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.01719951171875, 
    'attempts': 1, 'timeIncrement': 0.00576650390625, 'increment': 12, 
    'stepTime': 0.01719951171875, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.025849267578125, 
    'attempts': 1, 'timeIncrement': 0.008649755859375, 'increment': 13, 
    'stepTime': 0.025849267578125, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0388239013671875, 
    'attempts': 1, 'timeIncrement': 0.0129746337890625, 'increment': 14, 
    'stepTime': 0.0388239013671875, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0582858520507812, 
    'attempts': 1, 'timeIncrement': 0.0194619506835937, 'increment': 15, 
    'stepTime': 0.0582858520507812, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0782858520507813, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 16, 
    'stepTime': 0.0782858520507813, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0982858520507813, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 17, 
    'stepTime': 0.0982858520507813, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.118285852050781, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 18, 
    'stepTime': 0.118285852050781, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.138285852050781, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 19, 
    'stepTime': 0.138285852050781, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.158285852050781, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 20, 
    'stepTime': 0.158285852050781, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.178285852050781, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 21, 
    'stepTime': 0.178285852050781, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.198285852050781, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 22, 
    'stepTime': 0.198285852050781, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.2, 'attempts': 1, 
    'timeIncrement': 0.0017141479492187, 'increment': 23, 'stepTime': 0.2, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Dec 27 01:52:55 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-1'].setValues(amplitude='Amp-1', magnitude=
    400.0)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].boundaryConditions['BC-5'].setValues(typeName=YSYMM)
mdb.models['Model-1'].Pressure(amplitude='Amp-1', createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=400.0, name='Load-3', region=
    mdb.models['Model-1'].rootAssembly.surfaces['Surf-traverse-top'])
mdb.models['Model-1'].loads['Load-3'].setValues(magnitude=-400.0)
mdb.models['Model-1'].loads['Load-3'].suppress()
mdb.models['Model-1'].loads['Load-3'].resume()
mdb.models['Model-1'].loads['Load-1'].setValues(magnitude=-400.0)
mdb.models['Model-1'].loads['Load-3'].suppress()
mdb.models['Model-1'].loads['Load-1'].setValues(magnitude=400.0)
mdb.models['Model-1'].loads['Load-3'].resume()
mdb.models['Model-1'].loads['Load-3'].setValues(magnitude=400.0)
mdb.models['Model-1'].amplitudes['Amp-1'].setValues(data=((0.0, 0.0), (0.1, 
    0.5), (0.2, 1.0)), smooth=SOLVER_DEFAULT, timeSpan=STEP)
mdb.models['Model-1'].steps['Step-1'].setValues(maxNumInc=200)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 6540, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0001, 'attempts': 1, 
    'timeIncrement': 0.0001, 'increment': 1, 'stepTime': 0.0001, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0002, 'attempts': 1, 
    'timeIncrement': 0.0001, 'increment': 2, 'stepTime': 0.0002, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00035, 'attempts': 1, 
    'timeIncrement': 0.00015, 'increment': 3, 'stepTime': 0.00035, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000575, 'attempts': 1, 
    'timeIncrement': 0.000225, 'increment': 4, 'stepTime': 0.000575, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0009125, 'attempts': 1, 
    'timeIncrement': 0.0003375, 'increment': 5, 'stepTime': 0.0009125, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00141875, 'attempts': 1, 
    'timeIncrement': 0.00050625, 'increment': 6, 'stepTime': 0.00141875, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.002178125, 'attempts': 1, 
    'timeIncrement': 0.000759375, 'increment': 7, 'stepTime': 0.002178125, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0033171875, 'attempts': 1, 
    'timeIncrement': 0.0011390625, 'increment': 8, 'stepTime': 0.0033171875, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00502578125, 'attempts': 1, 
    'timeIncrement': 0.00170859375, 'increment': 9, 'stepTime': 0.00502578125, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.007588671875, 'attempts': 1, 
    'timeIncrement': 0.002562890625, 'increment': 10, 
    'stepTime': 0.007588671875, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0114330078125, 
    'attempts': 1, 'timeIncrement': 0.0038443359375, 'increment': 11, 
    'stepTime': 0.0114330078125, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.01719951171875, 
    'attempts': 1, 'timeIncrement': 0.00576650390625, 'increment': 12, 
    'stepTime': 0.01719951171875, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.025849267578125, 
    'attempts': 1, 'timeIncrement': 0.008649755859375, 'increment': 13, 
    'stepTime': 0.025849267578125, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0388239013671875, 
    'attempts': 1, 'timeIncrement': 0.0129746337890625, 'increment': 14, 
    'stepTime': 0.0388239013671875, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0582858520507812, 
    'attempts': 1, 'timeIncrement': 0.0194619506835937, 'increment': 15, 
    'stepTime': 0.0582858520507812, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0782858520507813, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 16, 
    'stepTime': 0.0782858520507813, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0982858520507813, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 17, 
    'stepTime': 0.0982858520507813, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.118285852050781, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 18, 
    'stepTime': 0.118285852050781, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.138285852050781, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 19, 
    'stepTime': 0.138285852050781, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.158285852050781, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 20, 
    'stepTime': 0.158285852050781, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.178285852050781, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 21, 
    'stepTime': 0.178285852050781, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.198285852050781, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 22, 
    'stepTime': 0.198285852050781, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.2, 'attempts': 1, 
    'timeIncrement': 0.0017141479492187, 'increment': 23, 'stepTime': 0.2, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Dec 27 02:15:57 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-3'].setValues(magnitude=200.0)
mdb.models['Model-1'].loads['Load-1'].setValues(magnitude=200.0)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 11736, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'memory': 175.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0001, 'increment': 1, 
    'attempts': 1, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.0001, 'stepTime': 0.0001, 'step': 1, 'jobName': 'Job-1', 
    'severe': 1, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0002, 'increment': 2, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.0001, 'stepTime': 0.0002, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00035, 'increment': 3, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.00015, 'stepTime': 0.00035, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000575, 'increment': 4, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.000225, 'stepTime': 0.000575, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0009125, 'increment': 5, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.0003375, 'stepTime': 0.0009125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00141875, 'increment': 6, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.00050625, 'stepTime': 0.00141875, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.002178125, 'increment': 7, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.000759375, 'stepTime': 0.002178125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0033171875, 'increment': 8, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.0011390625, 'stepTime': 0.0033171875, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00502578125, 'increment': 9, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.00170859375, 'stepTime': 0.00502578125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.007588671875, 
    'increment': 10, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.002562890625, 'stepTime': 0.007588671875, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0114330078125, 
    'increment': 11, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.0038443359375, 'stepTime': 0.0114330078125, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.01719951171875, 
    'increment': 12, 'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.00576650390625, 'stepTime': 0.01719951171875, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'equilibrium': 1})
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.jobs['Job-1']
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-12', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, numThreadsPerMpiProcess=1, queue=None, resultsFormat=
    ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=0, 
    waitMinutes=0)
mdb.jobs['Job-12'].submit(consistencyChecking=OFF)
mdb.jobs['Job-12']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-12.odb', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 10576, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-12', 'memory': 175.0})
mdb.jobs['Job-12']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.0001, 'attempts': 1, 
    'timeIncrement': 0.0001, 'increment': 1, 'stepTime': 0.0001, 'step': 1, 
    'jobName': 'Job-12', 'severe': 1, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.0002, 'attempts': 1, 
    'timeIncrement': 0.0001, 'increment': 2, 'stepTime': 0.0002, 'step': 1, 
    'jobName': 'Job-12', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.00035, 'attempts': 1, 
    'timeIncrement': 0.00015, 'increment': 3, 'stepTime': 0.00035, 'step': 1, 
    'jobName': 'Job-12', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.000575, 'attempts': 1, 
    'timeIncrement': 0.000225, 'increment': 4, 'stepTime': 0.000575, 'step': 1, 
    'jobName': 'Job-12', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.0009125, 'attempts': 1, 
    'timeIncrement': 0.0003375, 'increment': 5, 'stepTime': 0.0009125, 
    'step': 1, 'jobName': 'Job-12', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.00141875, 'attempts': 1, 
    'timeIncrement': 0.00050625, 'increment': 6, 'stepTime': 0.00141875, 
    'step': 1, 'jobName': 'Job-12', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.002178125, 'attempts': 1, 
    'timeIncrement': 0.000759375, 'increment': 7, 'stepTime': 0.002178125, 
    'step': 1, 'jobName': 'Job-12', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.0033171875, 'attempts': 1, 
    'timeIncrement': 0.0011390625, 'increment': 8, 'stepTime': 0.0033171875, 
    'step': 1, 'jobName': 'Job-12', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.00502578125, 'attempts': 1, 
    'timeIncrement': 0.00170859375, 'increment': 9, 'stepTime': 0.00502578125, 
    'step': 1, 'jobName': 'Job-12', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.007588671875, 
    'attempts': 1, 'timeIncrement': 0.002562890625, 'increment': 10, 
    'stepTime': 0.007588671875, 'step': 1, 'jobName': 'Job-12', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.0114330078125, 
    'attempts': 1, 'timeIncrement': 0.0038443359375, 'increment': 11, 
    'stepTime': 0.0114330078125, 'step': 1, 'jobName': 'Job-12', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.01719951171875, 
    'attempts': 1, 'timeIncrement': 0.00576650390625, 'increment': 12, 
    'stepTime': 0.01719951171875, 'step': 1, 'jobName': 'Job-12', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.025849267578125, 
    'attempts': 1, 'timeIncrement': 0.008649755859375, 'increment': 13, 
    'stepTime': 0.025849267578125, 'step': 1, 'jobName': 'Job-12', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.0388239013671875, 
    'attempts': 1, 'timeIncrement': 0.0129746337890625, 'increment': 14, 
    'stepTime': 0.0388239013671875, 'step': 1, 'jobName': 'Job-12', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.0582858520507812, 
    'attempts': 1, 'timeIncrement': 0.0194619506835937, 'increment': 15, 
    'stepTime': 0.0582858520507812, 'step': 1, 'jobName': 'Job-12', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.0782858520507813, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 16, 
    'stepTime': 0.0782858520507813, 'step': 1, 'jobName': 'Job-12', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.0982858520507813, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 17, 
    'stepTime': 0.0982858520507813, 'step': 1, 'jobName': 'Job-12', 
    'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.118285852050781, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 18, 
    'stepTime': 0.118285852050781, 'step': 1, 'jobName': 'Job-12', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.138285852050781, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 19, 
    'stepTime': 0.138285852050781, 'step': 1, 'jobName': 'Job-12', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.158285852050781, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 20, 
    'stepTime': 0.158285852050781, 'step': 1, 'jobName': 'Job-12', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.178285852050781, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 21, 
    'stepTime': 0.178285852050781, 'step': 1, 'jobName': 'Job-12', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.198285852050781, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 22, 
    'stepTime': 0.198285852050781, 'step': 1, 'jobName': 'Job-12', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(STATUS, {'totalTime': 0.2, 'attempts': 1, 
    'timeIncrement': 0.0017141479492187, 'increment': 23, 'stepTime': 0.2, 
    'step': 1, 'jobName': 'Job-12', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-12']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(JOB_COMPLETED, {'time': 'Fri Dec 27 03:16:18 2024', 
    'jobName': 'Job-12'})
mdb.models['Model-1'].loads['Load-3'].suppress()
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-12'].submit(consistencyChecking=OFF)
mdb.jobs['Job-12']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-12'})
mdb.jobs['Job-12']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-12.odb', 'jobName': 'Job-12'})
mdb.models['Model-1'].amplitudes['Amp-1'].setValues(data=((0.0, 0.0), (0.1, 
    0.3), (0.2, 0.4)), smooth=SOLVER_DEFAULT, timeSpan=STEP)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-12']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-12'})
del mdb.jobs['Job-12']
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, numThreadsPerMpiProcess=1, queue=None, resultsFormat=
    ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=0, 
    waitMinutes=0)
mdb.models['Model-1'].parts['rail'].deleteMesh()
mdb.models['Model-1'].parts['rail'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=1.0)
mdb.models['Model-1'].parts['rail'].generateMesh()
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
del mdb.models['Model-1'].loads['Load-1']
mdb.models['Model-1'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=200.0, name='Load-4', region=
    mdb.models['Model-1'].rootAssembly.surfaces['Surf-rail-top'])
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 3736, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0001, 'attempts': 1, 
    'timeIncrement': 0.0001, 'increment': 1, 'stepTime': 0.0001, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0002, 'attempts': 1, 
    'timeIncrement': 0.0001, 'increment': 2, 'stepTime': 0.0002, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00035, 'attempts': 1, 
    'timeIncrement': 0.00015, 'increment': 3, 'stepTime': 0.00035, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000575, 'attempts': 1, 
    'timeIncrement': 0.000225, 'increment': 4, 'stepTime': 0.000575, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0009125, 'attempts': 1, 
    'timeIncrement': 0.0003375, 'increment': 5, 'stepTime': 0.0009125, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00141875, 'attempts': 1, 
    'timeIncrement': 0.00050625, 'increment': 6, 'stepTime': 0.00141875, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.002178125, 'attempts': 1, 
    'timeIncrement': 0.000759375, 'increment': 7, 'stepTime': 0.002178125, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0033171875, 'attempts': 1, 
    'timeIncrement': 0.0011390625, 'increment': 8, 'stepTime': 0.0033171875, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00502578125, 'attempts': 1, 
    'timeIncrement': 0.00170859375, 'increment': 9, 'stepTime': 0.00502578125, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.007588671875, 'attempts': 1, 
    'timeIncrement': 0.002562890625, 'increment': 10, 
    'stepTime': 0.007588671875, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0114330078125, 
    'attempts': 1, 'timeIncrement': 0.0038443359375, 'increment': 11, 
    'stepTime': 0.0114330078125, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.01719951171875, 
    'attempts': 1, 'timeIncrement': 0.00576650390625, 'increment': 12, 
    'stepTime': 0.01719951171875, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.025849267578125, 
    'attempts': 1, 'timeIncrement': 0.008649755859375, 'increment': 13, 
    'stepTime': 0.025849267578125, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0388239013671875, 
    'attempts': 1, 'timeIncrement': 0.0129746337890625, 'increment': 14, 
    'stepTime': 0.0388239013671875, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0582858520507812, 
    'attempts': 1, 'timeIncrement': 0.0194619506835937, 'increment': 15, 
    'stepTime': 0.0582858520507812, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0782858520507813, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 16, 
    'stepTime': 0.0782858520507813, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0982858520507813, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 17, 
    'stepTime': 0.0982858520507813, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.118285852050781, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 18, 
    'stepTime': 0.118285852050781, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.138285852050781, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 19, 
    'stepTime': 0.138285852050781, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.158285852050781, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 20, 
    'stepTime': 0.158285852050781, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.178285852050781, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 21, 
    'stepTime': 0.178285852050781, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.198285852050781, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 22, 
    'stepTime': 0.198285852050781, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.2, 'attempts': 1, 
    'timeIncrement': 0.0017141479492187, 'increment': 23, 'stepTime': 0.2, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Dec 27 04:18:29 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-3'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-3'].resume()
mdb.models['Model-1'].boundaryConditions['BC-2'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-1'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-3'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-5'].suppress()
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 6708, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0001, 'attempts': 1, 
    'timeIncrement': 0.0001, 'increment': 1, 'stepTime': 0.0001, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0002, 'attempts': 1, 
    'timeIncrement': 0.0001, 'increment': 2, 'stepTime': 0.0002, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00035, 'attempts': 1, 
    'timeIncrement': 0.00015, 'increment': 3, 'stepTime': 0.00035, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000575, 'attempts': 1, 
    'timeIncrement': 0.000225, 'increment': 4, 'stepTime': 0.000575, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0009125, 'attempts': 1, 
    'timeIncrement': 0.0003375, 'increment': 5, 'stepTime': 0.0009125, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00141875, 'attempts': 1, 
    'timeIncrement': 0.00050625, 'increment': 6, 'stepTime': 0.00141875, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.002178125, 'attempts': 1, 
    'timeIncrement': 0.000759375, 'increment': 7, 'stepTime': 0.002178125, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0033171875, 'attempts': 1, 
    'timeIncrement': 0.0011390625, 'increment': 8, 'stepTime': 0.0033171875, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00502578125, 'attempts': 1, 
    'timeIncrement': 0.00170859375, 'increment': 9, 'stepTime': 0.00502578125, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.007588671875, 'attempts': 1, 
    'timeIncrement': 0.002562890625, 'increment': 10, 
    'stepTime': 0.007588671875, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0114330078125, 
    'attempts': 1, 'timeIncrement': 0.0038443359375, 'increment': 11, 
    'stepTime': 0.0114330078125, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.01719951171875, 
    'attempts': 1, 'timeIncrement': 0.00576650390625, 'increment': 12, 
    'stepTime': 0.01719951171875, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.025849267578125, 
    'attempts': 1, 'timeIncrement': 0.008649755859375, 'increment': 13, 
    'stepTime': 0.025849267578125, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0388239013671875, 
    'attempts': 1, 'timeIncrement': 0.0129746337890625, 'increment': 14, 
    'stepTime': 0.0388239013671875, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0582858520507812, 
    'attempts': 1, 'timeIncrement': 0.0194619506835937, 'increment': 15, 
    'stepTime': 0.0582858520507812, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0782858520507813, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 16, 
    'stepTime': 0.0782858520507813, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0982858520507813, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 17, 
    'stepTime': 0.0982858520507813, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.118285852050781, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 18, 
    'stepTime': 0.118285852050781, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.138285852050781, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 19, 
    'stepTime': 0.138285852050781, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.158285852050781, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 20, 
    'stepTime': 0.158285852050781, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.178285852050781, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 21, 
    'stepTime': 0.178285852050781, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.198285852050781, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 22, 
    'stepTime': 0.198285852050781, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.2, 'attempts': 1, 
    'timeIncrement': 0.0017141479492187, 'increment': 23, 'stepTime': 0.2, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Dec 27 05:04:33 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-5'].resume()
mdb.models['Model-1'].boundaryConditions['BC-1'].resume()
mdb.models['Model-1'].boundaryConditions['BC-2'].resume()
mdb.models['Model-1'].boundaryConditions['BC-3'].resume()
mdb.models['Model-1'].boundaryConditions['BC-4'].resume()
mdb.models['Model-1'].loads['Load-4'].suppress()
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '203 nodes have dof on which velocity/displacement/acceleration/base motion etc. constraints are specified simultaneously. The nodes have been identified in node set ErrNodeBCRedundantDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-5'].suppress()
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '4 nodes have dof on which velocity/displacement/acceleration/base motion etc. constraints are specified simultaneously. The nodes have been identified in node set ErrNodeBCRedundantDof.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-5'].resume()
mdb.models['Model-1'].boundaryConditions['BC-4'].suppress()
mdb.models['Model-1'].loads['Load-4'].resume()
mdb.models['Model-1'].loads['Load-3'].resume()
mdb.models['Model-1'].loads['Load-3'].suppress()
mdb.models['Model-1'].parts['traverse'].Set(edges=
    mdb.models['Model-1'].parts['traverse'].edges.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-top-traverse-selection')
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].loads['Load-3'].resume()
mdb.models['Model-1'].loads['Load-2'].resume()
mdb.models['Model-1'].loads['Load-2'].setValues(comp2=-200.0, region=
    mdb.models['Model-1'].rootAssembly.instances['Concrete_Slab-1'].sets['Set-1'])
mdb.models['Model-1'].Pressure(amplitude='Amp-1', createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=200.0, name='Load-5', region=
    mdb.models['Model-1'].rootAssembly.surfaces['Surf-ballast-top'])
mdb.models['Model-1'].loads['Load-2'].suppress()
mdb.models['Model-1'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=200.0, name='Load-6', region=
    mdb.models['Model-1'].rootAssembly.surfaces['Surf-Concrete-top'])
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 5196, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0001, 'attempts': 1, 
    'timeIncrement': 0.0001, 'increment': 1, 'stepTime': 0.0001, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0002, 'attempts': 1, 
    'timeIncrement': 0.0001, 'increment': 2, 'stepTime': 0.0002, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00035, 'attempts': 1, 
    'timeIncrement': 0.00015, 'increment': 3, 'stepTime': 0.00035, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000575, 'attempts': 1, 
    'timeIncrement': 0.000225, 'increment': 4, 'stepTime': 0.000575, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0009125, 'attempts': 1, 
    'timeIncrement': 0.0003375, 'increment': 5, 'stepTime': 0.0009125, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00141875, 'attempts': 1, 
    'timeIncrement': 0.00050625, 'increment': 6, 'stepTime': 0.00141875, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.002178125, 'attempts': 1, 
    'timeIncrement': 0.000759375, 'increment': 7, 'stepTime': 0.002178125, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0033171875, 'attempts': 1, 
    'timeIncrement': 0.0011390625, 'increment': 8, 'stepTime': 0.0033171875, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00502578125, 'attempts': 1, 
    'timeIncrement': 0.00170859375, 'increment': 9, 'stepTime': 0.00502578125, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.007588671875, 'attempts': 1, 
    'timeIncrement': 0.002562890625, 'increment': 10, 
    'stepTime': 0.007588671875, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0114330078125, 
    'attempts': 1, 'timeIncrement': 0.0038443359375, 'increment': 11, 
    'stepTime': 0.0114330078125, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.01719951171875, 
    'attempts': 1, 'timeIncrement': 0.00576650390625, 'increment': 12, 
    'stepTime': 0.01719951171875, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.025849267578125, 
    'attempts': 1, 'timeIncrement': 0.008649755859375, 'increment': 13, 
    'stepTime': 0.025849267578125, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0388239013671875, 
    'attempts': 1, 'timeIncrement': 0.0129746337890625, 'increment': 14, 
    'stepTime': 0.0388239013671875, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0582858520507812, 
    'attempts': 1, 'timeIncrement': 0.0194619506835937, 'increment': 15, 
    'stepTime': 0.0582858520507812, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0782858520507813, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 16, 
    'stepTime': 0.0782858520507813, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0982858520507813, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 17, 
    'stepTime': 0.0982858520507813, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.118285852050781, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 18, 
    'stepTime': 0.118285852050781, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.138285852050781, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 19, 
    'stepTime': 0.138285852050781, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.158285852050781, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 20, 
    'stepTime': 0.158285852050781, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.178285852050781, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 21, 
    'stepTime': 0.178285852050781, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.198285852050781, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 22, 
    'stepTime': 0.198285852050781, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.2, 'attempts': 1, 
    'timeIncrement': 0.0017141479492187, 'increment': 23, 'stepTime': 0.2, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Dec 27 05:27:17 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-6'].setValues(amplitude='Amp-1')
mdb.models['Model-1'].loads['Load-4'].setValues(amplitude='Amp-1')
mdb.models['Model-1'].boundaryConditions['BC-3'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-3'].resume()
mdb.models['Model-1'].boundaryConditions['BC-2'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-1'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-1'].resume()
mdb.models['Model-1'].boundaryConditions['BC-1'].suppress()
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].loads['Load-5'].setValues(magnitude=300.0)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 4732, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0001, 'attempts': 1, 
    'timeIncrement': 0.0001, 'increment': 1, 'stepTime': 0.0001, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0002, 'attempts': 1, 
    'timeIncrement': 0.0001, 'increment': 2, 'stepTime': 0.0002, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00035, 'attempts': 1, 
    'timeIncrement': 0.00015, 'increment': 3, 'stepTime': 0.00035, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.000575, 'attempts': 1, 
    'timeIncrement': 0.000225, 'increment': 4, 'stepTime': 0.000575, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0009125, 'attempts': 1, 
    'timeIncrement': 0.0003375, 'increment': 5, 'stepTime': 0.0009125, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00141875, 'attempts': 1, 
    'timeIncrement': 0.00050625, 'increment': 6, 'stepTime': 0.00141875, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.002178125, 'attempts': 1, 
    'timeIncrement': 0.000759375, 'increment': 7, 'stepTime': 0.002178125, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0033171875, 'attempts': 1, 
    'timeIncrement': 0.0011390625, 'increment': 8, 'stepTime': 0.0033171875, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00502578125, 'attempts': 1, 
    'timeIncrement': 0.00170859375, 'increment': 9, 'stepTime': 0.00502578125, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.007588671875, 'attempts': 1, 
    'timeIncrement': 0.002562890625, 'increment': 10, 
    'stepTime': 0.007588671875, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0114330078125, 
    'attempts': 1, 'timeIncrement': 0.0038443359375, 'increment': 11, 
    'stepTime': 0.0114330078125, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.01719951171875, 
    'attempts': 1, 'timeIncrement': 0.00576650390625, 'increment': 12, 
    'stepTime': 0.01719951171875, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.025849267578125, 
    'attempts': 1, 'timeIncrement': 0.008649755859375, 'increment': 13, 
    'stepTime': 0.025849267578125, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0388239013671875, 
    'attempts': 1, 'timeIncrement': 0.0129746337890625, 'increment': 14, 
    'stepTime': 0.0388239013671875, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0582858520507812, 
    'attempts': 1, 'timeIncrement': 0.0194619506835937, 'increment': 15, 
    'stepTime': 0.0582858520507812, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0782858520507813, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 16, 
    'stepTime': 0.0782858520507813, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0982858520507813, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 17, 
    'stepTime': 0.0982858520507813, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.118285852050781, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 18, 
    'stepTime': 0.118285852050781, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.138285852050781, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 19, 
    'stepTime': 0.138285852050781, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.158285852050781, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 20, 
    'stepTime': 0.158285852050781, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.178285852050781, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 21, 
    'stepTime': 0.178285852050781, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.198285852050781, 
    'attempts': 1, 'timeIncrement': 0.02, 'increment': 22, 
    'stepTime': 0.198285852050781, 'step': 1, 'jobName': 'Job-1', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.2, 'attempts': 1, 
    'timeIncrement': 0.0017141479492187, 'increment': 23, 'stepTime': 0.2, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Dec 27 05:48:32 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-6'].setValues(magnitude=400.0)
mdb.models['Model-1'].loads['Load-5'].setValues(magnitude=400.0)
mdb.models['Model-1'].loads['Load-4'].setValues(magnitude=400.0)
mdb.models['Model-1'].loads['Load-3'].setValues(magnitude=400.0)
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Concrete_Slab-1'].faces.getSequenceFromMask(
    ('[#1 ]', ), ), name='Set-5')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-6', region=mdb.models['Model-1'].rootAssembly.sets['Set-5'])
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Ballast_Layer-1'].faces.getSequenceFromMask(
    ('[#1 ]', ), ), name='Set-6')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-7', region=mdb.models['Model-1'].rootAssembly.sets['Set-6'])
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 5264, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0001, 'attempts': 1, 
    'timeIncrement': 0.0001, 'increment': 1, 'stepTime': 0.0001, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0002, 'attempts': 1, 
    'timeIncrement': 0.0001, 'increment': 2, 'stepTime': 0.0002, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.00035, 'attempts': 1, 
    'timeIncrement': 0.00015, 'increment': 3, 'stepTime': 0.00035, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis interrupted by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].steps['Step-1'].setValues(initialInc=0.01)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 8100, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.01, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 1, 'stepTime': 0.01, 'step': 1, 
    'jobName': 'Job-1', 'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.02, 'attempts': 1, 
    'timeIncrement': 0.01, 'increment': 2, 'stepTime': 0.02, 'step': 1, 
    'jobName': 'Job-1', 'severe': 2, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.035, 'attempts': 1, 
    'timeIncrement': 0.015, 'increment': 3, 'stepTime': 0.035, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.055, 'attempts': 1, 
    'timeIncrement': 0.02, 'increment': 4, 'stepTime': 0.055, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.075, 'attempts': 1, 
    'timeIncrement': 0.02, 'increment': 5, 'stepTime': 0.075, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.095, 'attempts': 1, 
    'timeIncrement': 0.02, 'increment': 6, 'stepTime': 0.095, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.115, 'attempts': 1, 
    'timeIncrement': 0.02, 'increment': 7, 'stepTime': 0.115, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.135, 'attempts': 1, 
    'timeIncrement': 0.02, 'increment': 8, 'stepTime': 0.135, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.155, 'attempts': 1, 
    'timeIncrement': 0.02, 'increment': 9, 'stepTime': 0.155, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.175, 'attempts': 1, 
    'timeIncrement': 0.02, 'increment': 10, 'stepTime': 0.175, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.195, 'attempts': 1, 
    'timeIncrement': 0.02, 'increment': 11, 'stepTime': 0.195, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.2, 'attempts': 1, 
    'timeIncrement': 0.00499999999999995, 'increment': 12, 'stepTime': 0.2, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Dec 27 06:04:16 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['Concrete_Slab-1'].edges.getSequenceFromMask(
    ('[#1 ]', ), ), name='Set-7')
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['Concrete_Slab-1'].edges.getSequenceFromMask(
    ('[#1 ]', ), ), name='Set-bottom-concrete-x')
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['Ballast_Layer-1'].edges.getSequenceFromMask(
    ('[#1 ]', ), ), name='Set-bottom-ballast-x')
mdb.models['Model-1'].boundaryConditions['BC-6'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['Set-bottom-concrete-x'])
mdb.models['Model-1'].boundaryConditions['BC-7'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['Set-bottom-ballast-x'])
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].loads['Load-6'].setValues(magnitude=300.0)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].steps['Step-1'].setValues(initialInc=0.07, maxNumInc=100)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 2052, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.07, 'attempts': 1, 
    'timeIncrement': 0.07, 'increment': 1, 'stepTime': 0.07, 'step': 1, 
    'jobName': 'Job-1', 'severe': 7, 'iterations': 8, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.14, 'attempts': 1, 
    'timeIncrement': 0.07, 'increment': 2, 'stepTime': 0.14, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.2, 'attempts': 1, 
    'timeIncrement': 0.06, 'increment': 3, 'stepTime': 0.2, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Dec 27 06:24:05 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-5'].setValues(magnitude=350.0)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 2192, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.07, 'attempts': 1, 
    'timeIncrement': 0.07, 'increment': 1, 'stepTime': 0.07, 'step': 1, 
    'jobName': 'Job-1', 'severe': 7, 'iterations': 8, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.14, 'attempts': 1, 
    'timeIncrement': 0.07, 'increment': 2, 'stepTime': 0.14, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.2, 'attempts': 1, 
    'timeIncrement': 0.06, 'increment': 3, 'stepTime': 0.2, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Dec 27 06:29:18 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-5'].setValues(magnitude=330.0)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 588, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.07, 'attempts': 1, 
    'timeIncrement': 0.07, 'increment': 1, 'stepTime': 0.07, 'step': 1, 
    'jobName': 'Job-1', 'severe': 7, 'iterations': 8, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.14, 'attempts': 1, 
    'timeIncrement': 0.07, 'increment': 2, 'stepTime': 0.14, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.2, 'attempts': 1, 
    'timeIncrement': 0.06, 'increment': 3, 'stepTime': 0.2, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Dec 27 06:33:25 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-6'].setValues(magnitude=280.0)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 2244, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'memory': 175.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.07, 'increment': 1, 
    'attempts': 1, 'iterations': 8, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.07, 'stepTime': 0.07, 'step': 1, 'jobName': 'Job-1', 
    'severe': 7, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.14, 'increment': 2, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.07, 'stepTime': 0.14, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.2, 'increment': 3, 
    'attempts': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'timeIncrement': 0.06, 'stepTime': 0.2, 'step': 1, 'jobName': 'Job-1', 
    'severe': 0, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'jobName': 'Job-1', 
    'time': 'Fri Dec 27 08:42:53 2024'})
mdb.models['Model-1'].amplitudes['Amp-1'].setValues(data=((0.0, 0.0), (0.1, 
    0.2), (0.2, 0.25)), smooth=SOLVER_DEFAULT, timeSpan=STEP)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].materials['ballast'].elastic.setValues(table=((
    900000000.0, 0.25), ))
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].loads['Load-5'].setValues(magnitude=320.0)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 5928, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.07, 'attempts': 1, 
    'timeIncrement': 0.07, 'increment': 1, 'stepTime': 0.07, 'step': 1, 
    'jobName': 'Job-1', 'severe': 7, 'iterations': 8, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.14, 'attempts': 1, 
    'timeIncrement': 0.07, 'increment': 2, 'stepTime': 0.14, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.2, 'attempts': 1, 
    'timeIncrement': 0.06, 'increment': 3, 'stepTime': 0.2, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Dec 27 09:02:53 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-5'].setValues(magnitude=300.0)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 1572, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.07, 'attempts': 1, 
    'timeIncrement': 0.07, 'increment': 1, 'stepTime': 0.07, 'step': 1, 
    'jobName': 'Job-1', 'severe': 7, 'iterations': 8, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.14, 'attempts': 1, 
    'timeIncrement': 0.07, 'increment': 2, 'stepTime': 0.14, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.2, 'attempts': 1, 
    'timeIncrement': 0.06, 'increment': 3, 'stepTime': 0.2, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Dec 27 09:12:37 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-7'].setValues(region=
    mdb.models['Model-1'].rootAssembly.instances['Ballast_Layer-1'].sets['Set-1'])
mdb.models['Model-1'].amplitudes['Amp-1'].setValues(data=((0.0, 0.0), (0.14, 
    0.2), (0.2, 0.25)), smooth=SOLVER_DEFAULT, timeSpan=STEP)
mdb.models['Model-1'].steps['Step-1'].setValues(timePeriod=0.14)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 5468, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.07, 'attempts': 1, 
    'timeIncrement': 0.07, 'increment': 1, 'stepTime': 0.07, 'step': 1, 
    'jobName': 'Job-1', 'severe': 7, 'iterations': 8, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.14, 'attempts': 1, 
    'timeIncrement': 0.07, 'increment': 2, 'stepTime': 0.14, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Dec 27 09:18:52 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-7'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['Set-bottom-ballast-x'])
mdb.models['Model-1'].loads['Load-5'].setValues(magnitude=280.0)
mdb.models['Model-1'].loads['Load-4'].setValues(magnitude=280.0)
mdb.models['Model-1'].loads['Load-3'].setValues(magnitude=280.0)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 6140, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.07, 'attempts': 1, 
    'timeIncrement': 0.07, 'increment': 1, 'stepTime': 0.07, 'step': 1, 
    'jobName': 'Job-1', 'severe': 7, 'iterations': 8, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.14, 'attempts': 1, 
    'timeIncrement': 0.07, 'increment': 2, 'stepTime': 0.14, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Dec 27 09:24:18 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['Ballast_Layer-1'].edges.getSequenceFromMask(
    ('[#4 ]', ), ), name='Set-top-ballast-x')
mdb.models['Model-1'].YsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-8', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-top-ballast-x'])
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 9780, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.07, 'attempts': 1, 
    'timeIncrement': 0.07, 'increment': 1, 'stepTime': 0.07, 'step': 1, 
    'jobName': 'Job-1', 'severe': 7, 'iterations': 8, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.14, 'attempts': 1, 
    'timeIncrement': 0.07, 'increment': 2, 'stepTime': 0.14, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Dec 27 09:31:28 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['rail-1'].edges.getSequenceFromMask(
    ('[#1 ]', ), ), name='Set-bottom-rail-x')
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['Concrete_Slab-1'].edges.getSequenceFromMask(
    ('[#1 ]', ), ), name='Set-bottom-concrete-xx')
mdb.models['Model-1'].YsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-9', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-bottom-concrete-xx'])
mdb.models['Model-1'].YsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-10', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-bottom-rail-x'])
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 10192, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.07, 'attempts': 1, 
    'timeIncrement': 0.07, 'increment': 1, 'stepTime': 0.07, 'step': 1, 
    'jobName': 'Job-1', 'severe': 7, 'iterations': 8, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.14, 'attempts': 1, 
    'timeIncrement': 0.07, 'increment': 2, 'stepTime': 0.14, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Dec 27 09:38:22 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['Concrete_Slab-1'].edges.getSequenceFromMask(
    ('[#1 ]', ), ), name='Set-top-concrete')
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['Concrete_Slab-1'].edges.getSequenceFromMask(
    ('[#4 ]', ), ), name='Set-top-concrete')
mdb.models['Model-1'].YsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-11', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-top-concrete'])
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].steps['Step-1'].setValues(timePeriod=0.07)
mdb.models['Model-1'].amplitudes['Amp-1'].setValues(data=((0.0, 0.0), (0.07, 
    0.25), (0.2, 0.35)), smooth=SOLVER_DEFAULT, timeSpan=STEP)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 1512, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.07, 'attempts': 1, 
    'timeIncrement': 0.07, 'increment': 1, 'stepTime': 0.07, 'step': 1, 
    'jobName': 'Job-1', 'severe': 4, 'iterations': 5, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Dec 27 09:45:38 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-6'].setValues(magnitude=350.0)
mdb.models['Model-1'].loads['Load-5'].setValues(magnitude=350.0)
mdb.models['Model-1'].loads['Load-3'].suppress()
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 7580, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.07, 'attempts': 1, 
    'timeIncrement': 0.07, 'increment': 1, 'stepTime': 0.07, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Dec 27 09:49:34 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-11'].setValues(typeName=ZASYMM)
mdb.models['Model-1'].boundaryConditions['BC-10'].setValues(typeName=ZASYMM)
mdb.models['Model-1'].boundaryConditions['BC-9'].setValues(typeName=ZASYMM)
mdb.models['Model-1'].boundaryConditions['BC-8'].setValues(typeName=ZASYMM)
mdb.models['Model-1'].boundaryConditions['BC-7'].setValues(typeName=ZASYMM)
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['Concrete_Slab-1'].edges.getSequenceFromMask(
    ('[#2 ]', ), ), name='Set-lateral-concrete')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-12', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-lateral-concrete'])
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].steps['Step-1'].setValues(initialInc=0.007, timePeriod=
    0.007)
mdb.models['Model-1'].amplitudes['Amp-1'].setValues(data=((0.0, 0.0), (0.007, 
    0.35), (0.2, 0.35)), smooth=SOLVER_DEFAULT, timeSpan=STEP)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 4872, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.007, 'attempts': 1, 
    'timeIncrement': 0.007, 'increment': 1, 'stepTime': 0.007, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Dec 27 10:05:41 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-6'].setValues(typeName=YSYMM)
mdb.models['Model-1'].boundaryConditions['BC-7'].setValues(typeName=YSYMM)
mdb.models['Model-1'].boundaryConditions['BC-8'].setValues(typeName=YSYMM)
mdb.models['Model-1'].boundaryConditions['BC-9'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-10'].setValues(typeName=YSYMM)
mdb.models['Model-1'].boundaryConditions['BC-11'].setValues(typeName=YSYMM)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 3036, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.007, 'attempts': 1, 
    'timeIncrement': 0.007, 'increment': 1, 'stepTime': 0.007, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Dec 27 10:10:02 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-4'].resume()
mdb.models['Model-1'].boundaryConditions['BC-4'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-9'].resume()
mdb.models['Model-1'].boundaryConditions['BC-9'].suppress()
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['rail-1'].edges.getSequenceFromMask(
    ('[#4 ]', ), ), name='Set-top-rail')
mdb.models['Model-1'].XasymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-13', region=mdb.models['Model-1'].rootAssembly.sets['Set-top-rail'])
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 6172, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.007, 'attempts': 1, 
    'timeIncrement': 0.007, 'increment': 1, 'stepTime': 0.007, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Dec 27 10:15:03 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-12'].setValues(typeName=XASYMM)
mdb.models['Model-1'].boundaryConditions['BC-11'].setValues(typeName=XASYMM)
mdb.models['Model-1'].boundaryConditions['BC-10'].setValues(typeName=XASYMM)
mdb.models['Model-1'].boundaryConditions['BC-8'].setValues(typeName=XASYMM)
mdb.models['Model-1'].boundaryConditions['BC-7'].setValues(typeName=XASYMM)
mdb.models['Model-1'].boundaryConditions['BC-6'].setValues(typeName=XASYMM)
mdb.models['Model-1'].boundaryConditions['BC-5'].setValues(typeName=XASYMM)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 8352, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.007, 'attempts': 1, 
    'timeIncrement': 0.007, 'increment': 1, 'stepTime': 0.007, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Dec 27 10:21:04 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-12'].suppress()
mdb.models['Model-1'].loads['Load-5'].setValues(magnitude=390.0)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].loads['Load-4'].setValues(amplitude=UNSET)
mdb.models['Model-1'].loads['Load-5'].setValues(amplitude=UNSET)
mdb.models['Model-1'].loads['Load-6'].setValues(amplitude=UNSET)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 7216, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.models['Model-1'].steps['Step-1'].setValues(initialInc=7e-05, timePeriod=
    7e-05)
del mdb.jobs['Job-1']
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, numThreadsPerMpiProcess=1, queue=None, resultsFormat=
    ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=0, 
    waitMinutes=0)
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis interrupted by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 9008, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 7e-05, 'attempts': 1, 
    'timeIncrement': 7e-05, 'increment': 1, 'stepTime': 7e-05, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Dec 27 10:26:56 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].steps['Step-1'].setValues(initialInc=0.007, timePeriod=
    0.2)
mdb.models['Model-1'].loads['Load-4'].setValues(amplitude='Amp-1')
mdb.models['Model-1'].loads['Load-5'].setValues(amplitude='Amp-1')
mdb.models['Model-1'].loads['Load-6'].setValues(amplitude='Amp-1')
mdb.models['Model-1'].amplitudes['Amp-1'].setValues(data=((0.0, 0.0), (0.007, 
    0.35), (0.2, 0.5)), smooth=SOLVER_DEFAULT, timeSpan=STEP)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 7764, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.007, 'attempts': 1, 
    'timeIncrement': 0.007, 'increment': 1, 'stepTime': 0.007, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.014, 'attempts': 1, 
    'timeIncrement': 0.007, 'increment': 2, 'stepTime': 0.014, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0245, 'attempts': 1, 
    'timeIncrement': 0.0105, 'increment': 3, 'stepTime': 0.0245, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.04025, 'attempts': 1, 
    'timeIncrement': 0.01575, 'increment': 4, 'stepTime': 0.04025, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.06025, 'attempts': 1, 
    'timeIncrement': 0.02, 'increment': 5, 'stepTime': 0.06025, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.08025, 'attempts': 1, 
    'timeIncrement': 0.02, 'increment': 6, 'stepTime': 0.08025, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.10025, 'attempts': 1, 
    'timeIncrement': 0.02, 'increment': 7, 'stepTime': 0.10025, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.12025, 'attempts': 1, 
    'timeIncrement': 0.02, 'increment': 8, 'stepTime': 0.12025, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.14025, 'attempts': 1, 
    'timeIncrement': 0.02, 'increment': 9, 'stepTime': 0.14025, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.16025, 'attempts': 1, 
    'timeIncrement': 0.02, 'increment': 10, 'stepTime': 0.16025, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.18025, 'attempts': 1, 
    'timeIncrement': 0.02, 'increment': 11, 'stepTime': 0.18025, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.2, 'attempts': 1, 
    'timeIncrement': 0.0197499999999999, 'increment': 12, 'stepTime': 0.2, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Dec 27 10:35:05 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-6'].setValues(magnitude=1000.0)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 3156, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.007, 'attempts': 1, 
    'timeIncrement': 0.007, 'increment': 1, 'stepTime': 0.007, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.014, 'attempts': 1, 
    'timeIncrement': 0.007, 'increment': 2, 'stepTime': 0.014, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0245, 'attempts': 1, 
    'timeIncrement': 0.0105, 'increment': 3, 'stepTime': 0.0245, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.04025, 'attempts': 1, 
    'timeIncrement': 0.01575, 'increment': 4, 'stepTime': 0.04025, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.06025, 'attempts': 1, 
    'timeIncrement': 0.02, 'increment': 5, 'stepTime': 0.06025, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.08025, 'attempts': 1, 
    'timeIncrement': 0.02, 'increment': 6, 'stepTime': 0.08025, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.10025, 'attempts': 1, 
    'timeIncrement': 0.02, 'increment': 7, 'stepTime': 0.10025, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.12025, 'attempts': 1, 
    'timeIncrement': 0.02, 'increment': 8, 'stepTime': 0.12025, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.14025, 'attempts': 1, 
    'timeIncrement': 0.02, 'increment': 9, 'stepTime': 0.14025, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.16025, 'attempts': 1, 
    'timeIncrement': 0.02, 'increment': 10, 'stepTime': 0.16025, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.18025, 'attempts': 1, 
    'timeIncrement': 0.02, 'increment': 11, 'stepTime': 0.18025, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.2, 'attempts': 1, 
    'timeIncrement': 0.0197499999999999, 'increment': 12, 'stepTime': 0.2, 
    'step': 1, 'jobName': 'Job-1', 'severe': 0, 'iterations': 1, 
    'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Dec 27 10:45:19 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-6'].setValues(magnitude=400.0)
mdb.models['Model-1'].loads['Load-5'].setValues(magnitude=1000.0)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 8268, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.007, 'attempts': 1, 
    'timeIncrement': 0.007, 'increment': 1, 'stepTime': 0.007, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.014, 'attempts': 1, 
    'timeIncrement': 0.007, 'increment': 2, 'stepTime': 0.014, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.models['Model-1'].boundaryConditions['BC-10'].suppress()
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0245, 'attempts': 1, 
    'timeIncrement': 0.0105, 'increment': 3, 'stepTime': 0.0245, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.04025, 'attempts': 1, 
    'timeIncrement': 0.01575, 'increment': 4, 'stepTime': 0.04025, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.06025, 'attempts': 1, 
    'timeIncrement': 0.02, 'increment': 5, 'stepTime': 0.06025, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.models['Model-1'].materials['ballast'].elastic.setValues(table=((
    900000000.0, 0.35), ))
mdb.models['Model-1'].materials['ballast'].elastic.setValues(table=((
    300000000.0, 0.35), ))
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.08025, 'attempts': 1, 
    'timeIncrement': 0.02, 'increment': 6, 'stepTime': 0.08025, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.models['Model-1'].materials['ballast'].elastic.setValues(table=((
    300000000.0, 0.3), ))
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1']._Message(ERROR, {'phase': STANDARD_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis interrupted by external signal', 'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-4'].setValues(amplitude=UNSET)
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-5'].setValues(amplitude=UNSET)
mdb.models['Model-1'].loads['Load-6'].setValues(amplitude=UNSET)
mdb.models['Model-1'].steps['Step-1'].setValues(initialInc=2e-06, timePeriod=
    2e-06)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 6984, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2e-06, 'attempts': 1, 
    'timeIncrement': 2e-06, 'increment': 1, 'stepTime': 2e-06, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Dec 27 11:13:48 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['rail-1'].faces.getSequenceFromMask(
    ('[#1 ]', ), ), name='Set-rail-x')
mdb.models['Model-1'].BodyForce(comp2=-300.0, createStepName='Step-1', name=
    'Load-7', region=mdb.models['Model-1'].rootAssembly.sets['Set-rail-x'])
mdb.models['Model-1'].loads['Load-4'].suppress()
mdb.models['Model-1'].loads['Load-5'].suppress()
mdb.models['Model-1'].loads['Load-6'].suppress()
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Concrete_Slab-1'].faces.getSequenceFromMask(
    ('[#1 ]', ), ), name='Set-concrete')
mdb.models['Model-1'].BodyForce(comp2=300.0, createStepName='Step-1', name=
    'Load-8', region=mdb.models['Model-1'].rootAssembly.sets['Set-concrete'])
mdb.models['Model-1'].loads['Load-8'].setValues(comp2=-300.0)
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Ballast_Layer-1'].faces.getSequenceFromMask(
    ('[#1 ]', ), ), name='Set-ballast-x')
mdb.models['Model-1'].BodyForce(comp2=-300.0, createStepName='Step-1', name=
    'Load-9', region=mdb.models['Model-1'].rootAssembly.sets['Set-ballast-x'])
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 6556, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2e-06, 'attempts': 1, 
    'timeIncrement': 2e-06, 'increment': 1, 'stepTime': 2e-06, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Dec 27 11:23:31 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].boundaryConditions['BC-13'].setValues(typeName=YASYMM)
mdb.models['Model-1'].boundaryConditions['BC-11'].setValues(typeName=YASYMM)
mdb.models['Model-1'].boundaryConditions['BC-8'].setValues(typeName=YASYMM)
mdb.models['Model-1'].boundaryConditions['BC-7'].setValues(typeName=YASYMM)
mdb.models['Model-1'].boundaryConditions['BC-6'].setValues(typeName=YASYMM)
mdb.models['Model-1'].boundaryConditions['BC-5'].setValues(typeName=YASYMM)
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Ballast_Layer-1'].faces.getSequenceFromMask(
    ('[#1 ]', ), ), name='Set-19')
mdb.models['Model-1'].loads['Load-9'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['Set-19'])
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 5452, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2e-06, 'attempts': 1, 
    'timeIncrement': 2e-06, 'increment': 1, 'stepTime': 2e-06, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Dec 27 11:48:31 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].loads['Load-9'].setValues(comp2=-1115000.0)
mdb.models['Model-1'].loads['Load-8'].setValues(comp2=-1115000.0)
mdb.models['Model-1'].loads['Load-7'].setValues(comp2=-1115000.0)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 8452, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 5 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 175.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 85.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 2e-06, 'attempts': 1, 
    'timeIncrement': 2e-06, 'increment': 1, 'stepTime': 2e-06, 'step': 1, 
    'jobName': 'Job-1', 'severe': 1, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Dec 27 12:03:09 2024', 
    'jobName': 'Job-1'})
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.deleteFeatures(('traverse-1-lin-2-1', 
    'traverse-1-lin-3-1', 'traverse-1-lin-4-1', 'traverse-1-lin-5-1', 
    'traverse-1-lin-6-1', 'traverse-1-lin-7-1', 'traverse-1-lin-8-1', 
    'traverse-1-lin-9-1', 'traverse-1-lin-10-1', 'traverse-1-lin-11-1', 
    'traverse-1-lin-12-1', 'traverse-1-lin-13-1', 'traverse-1-lin-14-1', 
    'traverse-1-lin-15-1', 'traverse-1-lin-16-1', 'traverse-1-lin-17-1', 
    'traverse-1-lin-18-1', 'traverse-1-lin-19-1', 'traverse-1-lin-20-1', 
    'traverse-1-lin-21-1', 'traverse-1-lin-22-1', 'traverse-1-lin-23-1', 
    'traverse-1-lin-24-1', 'traverse-1-lin-25-1', 'traverse-1-lin-26-1', 
    'traverse-1-lin-27-1', 'traverse-1-lin-28-1', 'traverse-1-lin-29-1', 
    'traverse-1-lin-30-1', 'traverse-1-lin-31-1', 'traverse-1-lin-32-1', 
    'traverse-1-lin-33-1', 'traverse-1-lin-34-1', 'traverse-1-lin-35-1', 
    'traverse-1-lin-36-1', 'traverse-1-lin-37-1', 'traverse-1-lin-38-1', 
    'traverse-1-lin-39-1', 'traverse-1-lin-40-1', 'traverse-1-lin-41-1', 
    'traverse-1-lin-42-1', 'traverse-1-lin-43-1', 'traverse-1-lin-44-1', 
    'traverse-1-lin-45-1', 'traverse-1-lin-46-1', 'traverse-1-lin-47-1', 
    'traverse-1-lin-48-1', 'traverse-1-lin-49-1', 'traverse-1-lin-50-1', 
    'traverse-1-lin-51-1', 'traverse-1-lin-52-1', 'traverse-1-lin-53-1', 
    'traverse-1-lin-54-1', 'traverse-1-lin-55-1', 'traverse-1-lin-56-1', 
    'traverse-1-lin-57-1', 'traverse-1-lin-58-1', 'traverse-1-lin-59-1', 
    'traverse-1-lin-60-1', 'traverse-1-lin-61-1', 'traverse-1-lin-62-1', 
    'traverse-1-lin-63-1', 'traverse-1-lin-64-1', 'traverse-1-lin-65-1', 
    'traverse-1-lin-66-1'))
mdb.models['Model-1'].rootAssembly.deleteFeatures(('traverse-1-lin-67-1', 
    'traverse-1-lin-68-1', 'traverse-1-lin-69-1', 'traverse-1-lin-70-1', 
    'traverse-1-lin-71-1', 'traverse-1-lin-72-1', 'traverse-1-lin-73-1', 
    'traverse-1-lin-74-1', 'traverse-1-lin-75-1', 'traverse-1-lin-76-1', 
    'traverse-1-lin-77-1', 'traverse-1-lin-78-1', 'traverse-1-lin-79-1', 
    'traverse-1-lin-80-1', 'traverse-1-lin-81-1', 'traverse-1-lin-82-1', 
    'traverse-1-lin-83-1', 'traverse-1-lin-84-1', 'traverse-1-lin-85-1', 
    'traverse-1-lin-86-1', 'traverse-1-lin-87-1', 'traverse-1-lin-88-1', 
    'traverse-1-lin-89-1', 'traverse-1-lin-90-1', 'traverse-1-lin-91-1', 
    'traverse-1-lin-92-1', 'traverse-1-lin-93-1', 'traverse-1-lin-94-1', 
    'traverse-1-lin-95-1', 'traverse-1-lin-96-1', 'traverse-1-lin-97-1', 
    'traverse-1-lin-98-1', 'traverse-1-lin-99-1', 'traverse-1-lin-100-1', 
    'traverse-1-lin-101-1', 'traverse-1-lin-102-1', 'traverse-1-lin-103-1', 
    'traverse-1-lin-104-1', 'traverse-1-lin-105-1', 'traverse-1-lin-106-1', 
    'traverse-1-lin-107-1', 'traverse-1-lin-108-1', 'traverse-1-lin-109-1', 
    'traverse-1-lin-110-1', 'traverse-1-lin-111-1', 'traverse-1-lin-112-1', 
    'traverse-1-lin-113-1', 'traverse-1-lin-114-1', 'traverse-1-lin-115-1', 
    'traverse-1-lin-116-1', 'traverse-1-lin-117-1', 'traverse-1-lin-118-1', 
    'traverse-1-lin-119-1', 'traverse-1-lin-120-1', 'traverse-1-lin-121-1', 
    'traverse-1-lin-122-1', 'traverse-1-lin-123-1', 'traverse-1-lin-124-1', 
    'traverse-1-lin-125-1', 'traverse-1-lin-126-1', 'traverse-1-lin-127-1', 
    'traverse-1-lin-128-1', 'traverse-1-lin-129-1', 'traverse-1-lin-130-1', 
    'traverse-1-lin-131-1', 'traverse-1-lin-132-1', 'traverse-1-lin-133-1', 
    'traverse-1-lin-134-1', 'traverse-1-lin-135-1', 'traverse-1-lin-136-1', 
    'traverse-1-lin-137-1', 'traverse-1-lin-138-1', 'traverse-1-lin-139-1', 
    'traverse-1-lin-140-1', 'traverse-1-lin-141-1', 'traverse-1-lin-142-1', 
    'traverse-1-lin-143-1', 'traverse-1-lin-144-1', 'traverse-1-lin-145-1', 
    'traverse-1-lin-146-1', 'traverse-1-lin-147-1', 'traverse-1-lin-148-1', 
    'traverse-1-lin-149-1', 'traverse-1-lin-150-1', 'traverse-1-lin-151-1', 
    'traverse-1-lin-152-1', 'traverse-1-lin-153-1', 'traverse-1-lin-154-1', 
    'traverse-1-lin-155-1', 'traverse-1-lin-156-1', 'traverse-1-lin-157-1', 
    'traverse-1-lin-158-1', 'traverse-1-lin-159-1', 'traverse-1-lin-160-1', 
    'traverse-1-lin-161-1', 'traverse-1-lin-162-1', 'traverse-1-lin-163-1', 
    'traverse-1-lin-164-1', 'traverse-1-lin-165-1', 'traverse-1-lin-166-1', 
    'traverse-1-lin-167-1', 'traverse-1-lin-168-1', 'traverse-1-lin-169-1', 
    'traverse-1-lin-170-1', 'traverse-1-lin-171-1', 'traverse-1-lin-172-1', 
    'traverse-1-lin-173-1', 'traverse-1-lin-174-1', 'traverse-1-lin-175-1', 
    'traverse-1-lin-176-1', 'traverse-1-lin-177-1', 'traverse-1-lin-178-1', 
    'traverse-1-lin-179-1', 'traverse-1-lin-180-1', 'traverse-1-lin-181-1', 
    'traverse-1-lin-182-1', 'traverse-1-lin-183-1', 'traverse-1-lin-184-1', 
    'traverse-1-lin-185-1', 'traverse-1-lin-186-1', 'traverse-1-lin-187-1', 
    'traverse-1-lin-188-1', 'traverse-1-lin-189-1', 'traverse-1-lin-190-1', 
    'traverse-1-lin-191-1', 'traverse-1-lin-192-1', 'traverse-1-lin-193-1', 
    'traverse-1-lin-194-1', 'traverse-1-lin-195-1', 'traverse-1-lin-196-1', 
    'traverse-1-lin-197-1', 'traverse-1-lin-198-1', 'traverse-1-lin-199-1', 
    'traverse-1-lin-200-1', 'traverse-1-lin-201-1', 'traverse-1-lin-202-1', 
    'traverse-1-lin-203-1', 'traverse-1-lin-204-1', 'traverse-1-lin-205-1', 
    'traverse-1-lin-206-1', 'traverse-1-lin-207-1', 'traverse-1-lin-208-1', 
    'traverse-1-lin-209-1', 'traverse-1-lin-210-1', 'traverse-1-lin-211-1', 
    'traverse-1-lin-212-1', 'traverse-1-lin-213-1', 'traverse-1-lin-214-1', 
    'traverse-1-lin-215-1', 'traverse-1-lin-216-1', 'traverse-1-lin-217-1', 
    'traverse-1-lin-218-1', 'traverse-1-lin-219-1', 'traverse-1-lin-220-1', 
    'traverse-1-lin-221-1', 'traverse-1-lin-222-1', 'traverse-1-lin-223-1', 
    'traverse-1-lin-224-1', 'traverse-1-lin-225-1', 'traverse-1-lin-226-1', 
    'traverse-1-lin-227-1', 'traverse-1-lin-228-1', 'traverse-1-lin-229-1', 
    'traverse-1-lin-230-1', 'traverse-1-lin-231-1', 'traverse-1-lin-232-1', 
    'traverse-1-lin-233-1', 'traverse-1-lin-234-1', 'traverse-1-lin-235-1', 
    'traverse-1-lin-236-1', 'traverse-1-lin-237-1', 'traverse-1-lin-238-1', 
    'traverse-1-lin-239-1', 'traverse-1-lin-240-1', 'traverse-1-lin-241-1', 
    'traverse-1-lin-242-1', 'traverse-1-lin-243-1', 'traverse-1-lin-244-1', 
    'traverse-1-lin-245-1', 'traverse-1-lin-246-1', 'traverse-1-lin-247-1', 
    'traverse-1-lin-248-1', 'traverse-1-lin-249-1', 'traverse-1-lin-250-1', 
    'traverse-1-lin-251-1', 'traverse-1-lin-252-1', 'traverse-1-lin-253-1', 
    'traverse-1-lin-254-1', 'traverse-1-lin-255-1', 'traverse-1-lin-256-1', 
    'traverse-1-lin-257-1', 'traverse-1-lin-258-1', 'traverse-1-lin-259-1', 
    'traverse-1-lin-260-1', 'traverse-1-lin-261-1', 'traverse-1-lin-262-1', 
    'traverse-1-lin-263-1', 'traverse-1-lin-264-1', 'traverse-1-lin-265-1', 
    'traverse-1-lin-266-1', 'traverse-1-lin-267-1', 'traverse-1-lin-268-1', 
    'traverse-1-lin-269-1', 'traverse-1-lin-270-1', 'traverse-1-lin-271-1', 
    'traverse-1-lin-272-1', 'traverse-1-lin-273-1', 'traverse-1-lin-274-1', 
    'traverse-1-lin-275-1', 'traverse-1-lin-276-1', 'traverse-1-lin-277-1', 
    'traverse-1-lin-278-1', 'traverse-1-lin-279-1', 'traverse-1-lin-280-1', 
    'traverse-1-lin-281-1', 'traverse-1-lin-282-1', 'traverse-1-lin-283-1', 
    'traverse-1-lin-284-1', 'traverse-1-lin-285-1', 'traverse-1-lin-286-1', 
    'traverse-1-lin-287-1', 'traverse-1-lin-288-1', 'traverse-1-lin-289-1', 
    'traverse-1-lin-290-1', 'traverse-1-lin-291-1', 'traverse-1-lin-292-1', 
    'traverse-1-lin-293-1', 'traverse-1-lin-294-1', 'traverse-1-lin-295-1', 
    'traverse-1-lin-296-1', 'traverse-1-lin-297-1', 'traverse-1-lin-298-1', 
    'traverse-1-lin-299-1', 'traverse-1-lin-300-1', 'traverse-1-lin-301-1', 
    'traverse-1-lin-302-1', 'traverse-1-lin-303-1', 'traverse-1-lin-304-1', 
    'traverse-1-lin-305-1', 'traverse-1-lin-306-1', 'traverse-1-lin-307-1', 
    'traverse-1-lin-308-1', 'traverse-1-lin-309-1', 'traverse-1-lin-310-1', 
    'traverse-1-lin-311-1', 'traverse-1-lin-312-1', 'traverse-1-lin-313-1', 
    'traverse-1-lin-314-1', 'traverse-1-lin-315-1', 'traverse-1-lin-316-1', 
    'traverse-1-lin-317-1', 'traverse-1-lin-318-1', 'traverse-1-lin-319-1', 
    'traverse-1-lin-320-1', 'traverse-1-lin-321-1', 'traverse-1-lin-322-1', 
    'traverse-1-lin-323-1', 'traverse-1-lin-324-1', 'traverse-1-lin-325-1', 
    'traverse-1-lin-326-1', 'traverse-1-lin-327-1', 'traverse-1-lin-328-1', 
    'traverse-1-lin-329-1', 'traverse-1-lin-330-1', 'traverse-1-lin-331-1', 
    'traverse-1-lin-332-1', 'traverse-1-lin-333-1', 'traverse-1-lin-334-1', 
    'traverse-1-lin-335-1', 'traverse-1-lin-336-1', 'traverse-1-lin-337-1', 
    'traverse-1-lin-338-1', 'traverse-1-lin-339-1', 'traverse-1-lin-340-1', 
    'traverse-1-lin-341-1', 'traverse-1-lin-342-1', 'traverse-1-lin-343-1', 
    'traverse-1-lin-344-1', 'traverse-1-lin-345-1', 'traverse-1-lin-346-1', 
    'traverse-1-lin-347-1', 'traverse-1-lin-348-1', 'traverse-1-lin-349-1', 
    'traverse-1-lin-350-1', 'traverse-1-lin-351-1', 'traverse-1-lin-352-1', 
    'traverse-1-lin-353-1', 'traverse-1-lin-354-1', 'traverse-1-lin-355-1', 
    'traverse-1-lin-356-1', 'traverse-1-lin-357-1', 'traverse-1-lin-358-1', 
    'traverse-1-lin-359-1', 'traverse-1-lin-360-1', 'traverse-1-lin-361-1', 
    'traverse-1-lin-362-1', 'traverse-1-lin-363-1', 'traverse-1-lin-364-1'))
mdb.models['Model-1'].rootAssembly.LinearInstancePattern(direction1=(1.0, 0.0, 
    0.0), direction2=(0.0, 1.0, 0.0), instanceList=('traverse-1', ), number1=
    333, number2=1, spacing1=0.6, spacing2=0.5)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].loads['Load-9'].suppress()
mdb.models['Model-1'].loads['Load-8'].suppress()
mdb.models['Model-1'].loads['Load-7'].suppress()
mdb.models['Model-1'].loads['Load-7'].resume()
mdb.models['Model-1'].loads['Load-8'].resume()
mdb.models['Model-1'].loads['Load-9'].resume()
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs.changeKey(fromName='Job-1', toName='Job-20')
mdb.jobs['Job-20'].submit(consistencyChecking=OFF)
mdb.jobs['Job-20']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-20'})
mdb.jobs['Job-20']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-20.odb', 'jobName': 'Job-20'})
mdb.jobs['Job-20']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-20'})
mdb.jobs['Job-20']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 8128, 'jobName': 'Job-20'})
mdb.jobs['Job-20']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-20'})
mdb.jobs['Job-20']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-20'})
mdb.jobs['Job-20']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 337 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-20'})
mdb.jobs['Job-20']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-20', 'memory': 107.0})
mdb.jobs['Job-20']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-20'})
mdb.jobs['Job-20']._Message(MINIMUM_MEMORY, {'minimum_memory': 40.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-20'})
mdb.jobs['Job-20']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-20'})
mdb.jobs['Job-20']._Message(STATUS, {'totalTime': 2e-06, 'attempts': 1, 
    'timeIncrement': 2e-06, 'increment': 1, 'stepTime': 2e-06, 'step': 1, 
    'jobName': 'Job-20', 'severe': 1, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-20']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-20'})
mdb.jobs['Job-20']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-20'})
mdb.jobs['Job-20']._Message(JOB_COMPLETED, {'time': 'Fri Dec 27 12:17:02 2024', 
    'jobName': 'Job-20'})
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.deleteFeatures(('traverse-1-lin-2-1', 
    'traverse-1-lin-3-1', 'traverse-1-lin-4-1', 'traverse-1-lin-5-1', 
    'traverse-1-lin-6-1', 'traverse-1-lin-7-1', 'traverse-1-lin-8-1', 
    'traverse-1-lin-9-1', 'traverse-1-lin-10-1', 'traverse-1-lin-11-1', 
    'traverse-1-lin-12-1', 'traverse-1-lin-13-1', 'traverse-1-lin-14-1', 
    'traverse-1-lin-15-1', 'traverse-1-lin-16-1', 'traverse-1-lin-17-1', 
    'traverse-1-lin-18-1', 'traverse-1-lin-19-1', 'traverse-1-lin-20-1', 
    'traverse-1-lin-21-1', 'traverse-1-lin-22-1', 'traverse-1-lin-23-1', 
    'traverse-1-lin-24-1', 'traverse-1-lin-25-1', 'traverse-1-lin-26-1', 
    'traverse-1-lin-27-1', 'traverse-1-lin-28-1', 'traverse-1-lin-29-1', 
    'traverse-1-lin-30-1', 'traverse-1-lin-31-1', 'traverse-1-lin-32-1', 
    'traverse-1-lin-33-1', 'traverse-1-lin-34-1', 'traverse-1-lin-35-1', 
    'traverse-1-lin-36-1', 'traverse-1-lin-37-1', 'traverse-1-lin-38-1', 
    'traverse-1-lin-39-1', 'traverse-1-lin-40-1', 'traverse-1-lin-41-1', 
    'traverse-1-lin-42-1', 'traverse-1-lin-43-1', 'traverse-1-lin-44-1', 
    'traverse-1-lin-45-1', 'traverse-1-lin-46-1', 'traverse-1-lin-47-1', 
    'traverse-1-lin-48-1', 'traverse-1-lin-49-1', 'traverse-1-lin-50-1', 
    'traverse-1-lin-51-1', 'traverse-1-lin-52-1', 'traverse-1-lin-53-1', 
    'traverse-1-lin-54-1', 'traverse-1-lin-55-1', 'traverse-1-lin-56-1', 
    'traverse-1-lin-57-1', 'traverse-1-lin-58-1', 'traverse-1-lin-59-1', 
    'traverse-1-lin-60-1', 'traverse-1-lin-61-1', 'traverse-1-lin-62-1', 
    'traverse-1-lin-63-1', 'traverse-1-lin-64-1', 'traverse-1-lin-65-1', 
    'traverse-1-lin-66-1', 'traverse-1-lin-67-1', 'traverse-1-lin-68-1', 
    'traverse-1-lin-69-1', 'traverse-1-lin-70-1', 'traverse-1-lin-71-1', 
    'traverse-1-lin-72-1'))
mdb.models['Model-1'].rootAssembly.deleteFeatures(('traverse-1-lin-73-1', 
    'traverse-1-lin-74-1', 'traverse-1-lin-75-1', 'traverse-1-lin-76-1', 
    'traverse-1-lin-77-1', 'traverse-1-lin-78-1', 'traverse-1-lin-79-1', 
    'traverse-1-lin-80-1', 'traverse-1-lin-81-1', 'traverse-1-lin-82-1', 
    'traverse-1-lin-83-1', 'traverse-1-lin-84-1', 'traverse-1-lin-85-1', 
    'traverse-1-lin-86-1', 'traverse-1-lin-87-1', 'traverse-1-lin-88-1', 
    'traverse-1-lin-89-1', 'traverse-1-lin-90-1', 'traverse-1-lin-91-1', 
    'traverse-1-lin-92-1', 'traverse-1-lin-93-1', 'traverse-1-lin-94-1', 
    'traverse-1-lin-95-1', 'traverse-1-lin-96-1', 'traverse-1-lin-97-1', 
    'traverse-1-lin-98-1', 'traverse-1-lin-99-1', 'traverse-1-lin-100-1', 
    'traverse-1-lin-101-1', 'traverse-1-lin-102-1', 'traverse-1-lin-103-1', 
    'traverse-1-lin-104-1', 'traverse-1-lin-105-1', 'traverse-1-lin-106-1', 
    'traverse-1-lin-107-1', 'traverse-1-lin-108-1', 'traverse-1-lin-109-1', 
    'traverse-1-lin-110-1', 'traverse-1-lin-111-1', 'traverse-1-lin-112-1', 
    'traverse-1-lin-113-1', 'traverse-1-lin-114-1', 'traverse-1-lin-115-1', 
    'traverse-1-lin-116-1', 'traverse-1-lin-117-1', 'traverse-1-lin-118-1', 
    'traverse-1-lin-119-1', 'traverse-1-lin-120-1', 'traverse-1-lin-121-1', 
    'traverse-1-lin-122-1', 'traverse-1-lin-123-1', 'traverse-1-lin-124-1', 
    'traverse-1-lin-125-1', 'traverse-1-lin-126-1', 'traverse-1-lin-127-1', 
    'traverse-1-lin-128-1', 'traverse-1-lin-129-1', 'traverse-1-lin-130-1', 
    'traverse-1-lin-131-1', 'traverse-1-lin-132-1', 'traverse-1-lin-133-1', 
    'traverse-1-lin-134-1', 'traverse-1-lin-135-1', 'traverse-1-lin-136-1', 
    'traverse-1-lin-137-1', 'traverse-1-lin-138-1', 'traverse-1-lin-139-1', 
    'traverse-1-lin-140-1', 'traverse-1-lin-141-1', 'traverse-1-lin-142-1', 
    'traverse-1-lin-143-1', 'traverse-1-lin-144-1', 'traverse-1-lin-145-1', 
    'traverse-1-lin-146-1', 'traverse-1-lin-147-1', 'traverse-1-lin-148-1', 
    'traverse-1-lin-149-1', 'traverse-1-lin-150-1', 'traverse-1-lin-151-1', 
    'traverse-1-lin-152-1', 'traverse-1-lin-153-1', 'traverse-1-lin-154-1', 
    'traverse-1-lin-155-1', 'traverse-1-lin-156-1', 'traverse-1-lin-157-1', 
    'traverse-1-lin-158-1', 'traverse-1-lin-159-1', 'traverse-1-lin-160-1', 
    'traverse-1-lin-161-1', 'traverse-1-lin-162-1', 'traverse-1-lin-163-1', 
    'traverse-1-lin-164-1', 'traverse-1-lin-165-1', 'traverse-1-lin-166-1', 
    'traverse-1-lin-167-1', 'traverse-1-lin-168-1', 'traverse-1-lin-169-1', 
    'traverse-1-lin-170-1', 'traverse-1-lin-171-1', 'traverse-1-lin-172-1', 
    'traverse-1-lin-173-1', 'traverse-1-lin-174-1', 'traverse-1-lin-175-1', 
    'traverse-1-lin-176-1', 'traverse-1-lin-177-1', 'traverse-1-lin-178-1', 
    'traverse-1-lin-179-1', 'traverse-1-lin-180-1', 'traverse-1-lin-181-1', 
    'traverse-1-lin-182-1', 'traverse-1-lin-183-1', 'traverse-1-lin-184-1', 
    'traverse-1-lin-185-1', 'traverse-1-lin-186-1', 'traverse-1-lin-187-1', 
    'traverse-1-lin-188-1', 'traverse-1-lin-189-1', 'traverse-1-lin-190-1', 
    'traverse-1-lin-191-1', 'traverse-1-lin-192-1', 'traverse-1-lin-193-1', 
    'traverse-1-lin-194-1', 'traverse-1-lin-195-1', 'traverse-1-lin-196-1', 
    'traverse-1-lin-197-1', 'traverse-1-lin-198-1', 'traverse-1-lin-199-1', 
    'traverse-1-lin-200-1', 'traverse-1-lin-201-1', 'traverse-1-lin-202-1', 
    'traverse-1-lin-203-1', 'traverse-1-lin-204-1', 'traverse-1-lin-205-1', 
    'traverse-1-lin-206-1', 'traverse-1-lin-207-1', 'traverse-1-lin-208-1', 
    'traverse-1-lin-209-1', 'traverse-1-lin-210-1', 'traverse-1-lin-211-1', 
    'traverse-1-lin-212-1', 'traverse-1-lin-213-1', 'traverse-1-lin-214-1', 
    'traverse-1-lin-215-1', 'traverse-1-lin-216-1', 'traverse-1-lin-217-1', 
    'traverse-1-lin-218-1', 'traverse-1-lin-219-1', 'traverse-1-lin-220-1', 
    'traverse-1-lin-221-1', 'traverse-1-lin-222-1', 'traverse-1-lin-223-1', 
    'traverse-1-lin-224-1', 'traverse-1-lin-225-1', 'traverse-1-lin-226-1', 
    'traverse-1-lin-227-1', 'traverse-1-lin-228-1', 'traverse-1-lin-229-1', 
    'traverse-1-lin-230-1', 'traverse-1-lin-231-1', 'traverse-1-lin-232-1', 
    'traverse-1-lin-233-1', 'traverse-1-lin-234-1', 'traverse-1-lin-235-1', 
    'traverse-1-lin-236-1', 'traverse-1-lin-237-1', 'traverse-1-lin-238-1', 
    'traverse-1-lin-239-1', 'traverse-1-lin-240-1', 'traverse-1-lin-241-1', 
    'traverse-1-lin-242-1', 'traverse-1-lin-243-1', 'traverse-1-lin-244-1', 
    'traverse-1-lin-245-1', 'traverse-1-lin-246-1', 'traverse-1-lin-247-1', 
    'traverse-1-lin-248-1', 'traverse-1-lin-249-1', 'traverse-1-lin-250-1', 
    'traverse-1-lin-251-1', 'traverse-1-lin-252-1', 'traverse-1-lin-253-1', 
    'traverse-1-lin-254-1', 'traverse-1-lin-255-1', 'traverse-1-lin-256-1', 
    'traverse-1-lin-257-1', 'traverse-1-lin-258-1', 'traverse-1-lin-259-1', 
    'traverse-1-lin-260-1', 'traverse-1-lin-261-1', 'traverse-1-lin-262-1', 
    'traverse-1-lin-263-1', 'traverse-1-lin-264-1', 'traverse-1-lin-265-1', 
    'traverse-1-lin-266-1', 'traverse-1-lin-267-1', 'traverse-1-lin-268-1', 
    'traverse-1-lin-269-1', 'traverse-1-lin-270-1', 'traverse-1-lin-271-1', 
    'traverse-1-lin-272-1', 'traverse-1-lin-273-1', 'traverse-1-lin-274-1', 
    'traverse-1-lin-275-1', 'traverse-1-lin-276-1', 'traverse-1-lin-277-1', 
    'traverse-1-lin-278-1', 'traverse-1-lin-279-1', 'traverse-1-lin-280-1', 
    'traverse-1-lin-281-1', 'traverse-1-lin-282-1', 'traverse-1-lin-283-1', 
    'traverse-1-lin-284-1', 'traverse-1-lin-285-1', 'traverse-1-lin-286-1', 
    'traverse-1-lin-287-1', 'traverse-1-lin-288-1', 'traverse-1-lin-289-1', 
    'traverse-1-lin-290-1', 'traverse-1-lin-291-1', 'traverse-1-lin-292-1', 
    'traverse-1-lin-293-1', 'traverse-1-lin-294-1', 'traverse-1-lin-295-1', 
    'traverse-1-lin-296-1', 'traverse-1-lin-297-1', 'traverse-1-lin-298-1', 
    'traverse-1-lin-299-1', 'traverse-1-lin-300-1', 'traverse-1-lin-301-1', 
    'traverse-1-lin-302-1', 'traverse-1-lin-303-1', 'traverse-1-lin-304-1', 
    'traverse-1-lin-305-1', 'traverse-1-lin-306-1', 'traverse-1-lin-307-1', 
    'traverse-1-lin-308-1', 'traverse-1-lin-309-1', 'traverse-1-lin-310-1', 
    'traverse-1-lin-311-1', 'traverse-1-lin-312-1', 'traverse-1-lin-313-1', 
    'traverse-1-lin-314-1', 'traverse-1-lin-315-1', 'traverse-1-lin-316-1', 
    'traverse-1-lin-317-1', 'traverse-1-lin-318-1', 'traverse-1-lin-319-1', 
    'traverse-1-lin-320-1', 'traverse-1-lin-321-1', 'traverse-1-lin-322-1', 
    'traverse-1-lin-323-1', 'traverse-1-lin-324-1', 'traverse-1-lin-325-1', 
    'traverse-1-lin-326-1', 'traverse-1-lin-327-1', 'traverse-1-lin-328-1', 
    'traverse-1-lin-329-1', 'traverse-1-lin-330-1', 'traverse-1-lin-331-1', 
    'traverse-1-lin-332-1', 'traverse-1-lin-333-1'))
mdb.models['Model-1'].rootAssembly.LinearInstancePattern(direction1=(1.0, 0.0, 
    0.0), direction2=(0.0, 1.0, 0.0), instanceList=('traverse-1', ), number1=
    307, number2=1, spacing1=0.65, spacing2=0.5)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs.changeKey(fromName='Job-20', toName='Job-25')
mdb.jobs['Job-25'].submit(consistencyChecking=OFF)
mdb.jobs['Job-25']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-25'})
mdb.jobs['Job-25']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-25.odb', 'jobName': 'Job-25'})
mdb.jobs['Job-25']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-25'})
mdb.jobs['Job-25']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 4364, 'jobName': 'Job-25'})
mdb.jobs['Job-25']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-25'})
mdb.jobs['Job-25']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-25'})
mdb.jobs['Job-25']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 311 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-25'})
mdb.jobs['Job-25']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-25', 'memory': 102.0})
mdb.jobs['Job-25']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-25'})
mdb.jobs['Job-25']._Message(MINIMUM_MEMORY, {'minimum_memory': 38.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-25'})
mdb.jobs['Job-25']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-25'})
mdb.jobs['Job-25']._Message(STATUS, {'totalTime': 2e-06, 'attempts': 1, 
    'timeIncrement': 2e-06, 'increment': 1, 'stepTime': 2e-06, 'step': 1, 
    'jobName': 'Job-25', 'severe': 1, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-25']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-25'})
mdb.jobs['Job-25']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-25'})
mdb.jobs['Job-25']._Message(JOB_COMPLETED, {'time': 'Fri Dec 27 12:25:17 2024', 
    'jobName': 'Job-25'})
# Save by mofid on 2024_12_27-12.30.17; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.deleteFeatures(('traverse-1-lin-2-1', 
    'traverse-1-lin-3-1', 'traverse-1-lin-4-1', 'traverse-1-lin-5-1', 
    'traverse-1-lin-6-1', 'traverse-1-lin-7-1', 'traverse-1-lin-8-1', 
    'traverse-1-lin-9-1', 'traverse-1-lin-10-1', 'traverse-1-lin-11-1', 
    'traverse-1-lin-12-1', 'traverse-1-lin-13-1', 'traverse-1-lin-14-1', 
    'traverse-1-lin-15-1', 'traverse-1-lin-16-1', 'traverse-1-lin-17-1', 
    'traverse-1-lin-18-1', 'traverse-1-lin-19-1', 'traverse-1-lin-20-1', 
    'traverse-1-lin-21-1', 'traverse-1-lin-22-1', 'traverse-1-lin-23-1', 
    'traverse-1-lin-24-1', 'traverse-1-lin-25-1', 'traverse-1-lin-26-1', 
    'traverse-1-lin-27-1', 'traverse-1-lin-28-1', 'traverse-1-lin-29-1', 
    'traverse-1-lin-30-1', 'traverse-1-lin-31-1', 'traverse-1-lin-32-1', 
    'traverse-1-lin-33-1', 'traverse-1-lin-34-1', 'traverse-1-lin-35-1', 
    'traverse-1-lin-36-1', 'traverse-1-lin-37-1', 'traverse-1-lin-38-1', 
    'traverse-1-lin-39-1', 'traverse-1-lin-40-1', 'traverse-1-lin-41-1', 
    'traverse-1-lin-42-1', 'traverse-1-lin-43-1', 'traverse-1-lin-44-1', 
    'traverse-1-lin-45-1', 'traverse-1-lin-46-1', 'traverse-1-lin-47-1', 
    'traverse-1-lin-48-1', 'traverse-1-lin-49-1', 'traverse-1-lin-50-1', 
    'traverse-1-lin-51-1', 'traverse-1-lin-52-1', 'traverse-1-lin-53-1', 
    'traverse-1-lin-54-1', 'traverse-1-lin-55-1', 'traverse-1-lin-56-1', 
    'traverse-1-lin-57-1', 'traverse-1-lin-58-1', 'traverse-1-lin-59-1', 
    'traverse-1-lin-60-1', 'traverse-1-lin-61-1', 'traverse-1-lin-62-1'))
mdb.models['Model-1'].rootAssembly.deleteFeatures(('traverse-1-lin-63-1', 
    'traverse-1-lin-64-1', 'traverse-1-lin-65-1', 'traverse-1-lin-66-1', 
    'traverse-1-lin-67-1', 'traverse-1-lin-68-1', 'traverse-1-lin-69-1', 
    'traverse-1-lin-70-1', 'traverse-1-lin-71-1', 'traverse-1-lin-72-1', 
    'traverse-1-lin-73-1', 'traverse-1-lin-74-1', 'traverse-1-lin-75-1', 
    'traverse-1-lin-76-1', 'traverse-1-lin-77-1', 'traverse-1-lin-78-1', 
    'traverse-1-lin-79-1', 'traverse-1-lin-80-1', 'traverse-1-lin-81-1', 
    'traverse-1-lin-82-1', 'traverse-1-lin-83-1', 'traverse-1-lin-84-1', 
    'traverse-1-lin-85-1', 'traverse-1-lin-86-1', 'traverse-1-lin-87-1', 
    'traverse-1-lin-88-1', 'traverse-1-lin-89-1', 'traverse-1-lin-90-1', 
    'traverse-1-lin-91-1', 'traverse-1-lin-92-1', 'traverse-1-lin-93-1', 
    'traverse-1-lin-94-1', 'traverse-1-lin-95-1', 'traverse-1-lin-96-1', 
    'traverse-1-lin-97-1', 'traverse-1-lin-98-1', 'traverse-1-lin-99-1', 
    'traverse-1-lin-100-1', 'traverse-1-lin-101-1', 'traverse-1-lin-102-1', 
    'traverse-1-lin-103-1', 'traverse-1-lin-104-1', 'traverse-1-lin-105-1', 
    'traverse-1-lin-106-1', 'traverse-1-lin-107-1', 'traverse-1-lin-108-1', 
    'traverse-1-lin-109-1', 'traverse-1-lin-110-1', 'traverse-1-lin-111-1', 
    'traverse-1-lin-112-1', 'traverse-1-lin-113-1', 'traverse-1-lin-114-1', 
    'traverse-1-lin-115-1', 'traverse-1-lin-116-1', 'traverse-1-lin-117-1', 
    'traverse-1-lin-118-1', 'traverse-1-lin-119-1', 'traverse-1-lin-120-1', 
    'traverse-1-lin-121-1', 'traverse-1-lin-122-1', 'traverse-1-lin-123-1', 
    'traverse-1-lin-124-1', 'traverse-1-lin-125-1', 'traverse-1-lin-126-1', 
    'traverse-1-lin-127-1', 'traverse-1-lin-128-1', 'traverse-1-lin-129-1', 
    'traverse-1-lin-130-1', 'traverse-1-lin-131-1', 'traverse-1-lin-132-1', 
    'traverse-1-lin-133-1', 'traverse-1-lin-134-1', 'traverse-1-lin-135-1', 
    'traverse-1-lin-136-1', 'traverse-1-lin-137-1', 'traverse-1-lin-138-1', 
    'traverse-1-lin-139-1', 'traverse-1-lin-140-1', 'traverse-1-lin-141-1', 
    'traverse-1-lin-142-1', 'traverse-1-lin-143-1', 'traverse-1-lin-144-1', 
    'traverse-1-lin-145-1', 'traverse-1-lin-146-1', 'traverse-1-lin-147-1', 
    'traverse-1-lin-148-1', 'traverse-1-lin-149-1', 'traverse-1-lin-150-1', 
    'traverse-1-lin-151-1', 'traverse-1-lin-152-1', 'traverse-1-lin-153-1', 
    'traverse-1-lin-154-1', 'traverse-1-lin-155-1', 'traverse-1-lin-156-1', 
    'traverse-1-lin-157-1', 'traverse-1-lin-158-1', 'traverse-1-lin-159-1', 
    'traverse-1-lin-160-1', 'traverse-1-lin-161-1', 'traverse-1-lin-162-1', 
    'traverse-1-lin-163-1', 'traverse-1-lin-164-1', 'traverse-1-lin-165-1', 
    'traverse-1-lin-166-1', 'traverse-1-lin-167-1', 'traverse-1-lin-168-1', 
    'traverse-1-lin-169-1', 'traverse-1-lin-170-1', 'traverse-1-lin-171-1', 
    'traverse-1-lin-172-1', 'traverse-1-lin-173-1', 'traverse-1-lin-174-1', 
    'traverse-1-lin-175-1', 'traverse-1-lin-176-1', 'traverse-1-lin-177-1', 
    'traverse-1-lin-178-1', 'traverse-1-lin-179-1', 'traverse-1-lin-180-1', 
    'traverse-1-lin-181-1', 'traverse-1-lin-182-1', 'traverse-1-lin-183-1', 
    'traverse-1-lin-184-1', 'traverse-1-lin-185-1', 'traverse-1-lin-186-1', 
    'traverse-1-lin-187-1', 'traverse-1-lin-188-1', 'traverse-1-lin-189-1', 
    'traverse-1-lin-190-1', 'traverse-1-lin-191-1', 'traverse-1-lin-192-1', 
    'traverse-1-lin-193-1', 'traverse-1-lin-194-1', 'traverse-1-lin-195-1', 
    'traverse-1-lin-196-1', 'traverse-1-lin-197-1', 'traverse-1-lin-198-1', 
    'traverse-1-lin-199-1', 'traverse-1-lin-200-1', 'traverse-1-lin-201-1', 
    'traverse-1-lin-202-1', 'traverse-1-lin-203-1', 'traverse-1-lin-204-1', 
    'traverse-1-lin-205-1', 'traverse-1-lin-206-1', 'traverse-1-lin-207-1', 
    'traverse-1-lin-208-1', 'traverse-1-lin-209-1', 'traverse-1-lin-210-1', 
    'traverse-1-lin-211-1', 'traverse-1-lin-212-1', 'traverse-1-lin-213-1', 
    'traverse-1-lin-214-1', 'traverse-1-lin-215-1', 'traverse-1-lin-216-1', 
    'traverse-1-lin-217-1', 'traverse-1-lin-218-1', 'traverse-1-lin-219-1', 
    'traverse-1-lin-220-1', 'traverse-1-lin-221-1', 'traverse-1-lin-222-1', 
    'traverse-1-lin-223-1', 'traverse-1-lin-224-1', 'traverse-1-lin-225-1', 
    'traverse-1-lin-226-1', 'traverse-1-lin-227-1', 'traverse-1-lin-228-1', 
    'traverse-1-lin-229-1', 'traverse-1-lin-230-1', 'traverse-1-lin-231-1', 
    'traverse-1-lin-232-1', 'traverse-1-lin-233-1', 'traverse-1-lin-234-1', 
    'traverse-1-lin-235-1', 'traverse-1-lin-236-1', 'traverse-1-lin-237-1', 
    'traverse-1-lin-238-1', 'traverse-1-lin-239-1', 'traverse-1-lin-240-1', 
    'traverse-1-lin-241-1', 'traverse-1-lin-242-1', 'traverse-1-lin-243-1', 
    'traverse-1-lin-244-1', 'traverse-1-lin-245-1', 'traverse-1-lin-246-1', 
    'traverse-1-lin-247-1', 'traverse-1-lin-248-1', 'traverse-1-lin-249-1', 
    'traverse-1-lin-250-1', 'traverse-1-lin-251-1', 'traverse-1-lin-252-1', 
    'traverse-1-lin-253-1', 'traverse-1-lin-254-1', 'traverse-1-lin-255-1', 
    'traverse-1-lin-256-1', 'traverse-1-lin-257-1', 'traverse-1-lin-258-1', 
    'traverse-1-lin-259-1', 'traverse-1-lin-260-1', 'traverse-1-lin-261-1', 
    'traverse-1-lin-262-1', 'traverse-1-lin-263-1', 'traverse-1-lin-264-1', 
    'traverse-1-lin-265-1', 'traverse-1-lin-266-1', 'traverse-1-lin-267-1', 
    'traverse-1-lin-268-1', 'traverse-1-lin-269-1', 'traverse-1-lin-270-1', 
    'traverse-1-lin-271-1', 'traverse-1-lin-272-1', 'traverse-1-lin-273-1', 
    'traverse-1-lin-274-1', 'traverse-1-lin-275-1', 'traverse-1-lin-276-1', 
    'traverse-1-lin-277-1', 'traverse-1-lin-278-1', 'traverse-1-lin-279-1', 
    'traverse-1-lin-280-1', 'traverse-1-lin-281-1', 'traverse-1-lin-282-1', 
    'traverse-1-lin-283-1', 'traverse-1-lin-284-1', 'traverse-1-lin-285-1', 
    'traverse-1-lin-286-1', 'traverse-1-lin-287-1', 'traverse-1-lin-288-1', 
    'traverse-1-lin-289-1', 'traverse-1-lin-290-1', 'traverse-1-lin-291-1', 
    'traverse-1-lin-292-1', 'traverse-1-lin-293-1', 'traverse-1-lin-294-1', 
    'traverse-1-lin-295-1', 'traverse-1-lin-296-1', 'traverse-1-lin-297-1', 
    'traverse-1-lin-298-1', 'traverse-1-lin-299-1', 'traverse-1-lin-300-1', 
    'traverse-1-lin-301-1', 'traverse-1-lin-302-1', 'traverse-1-lin-303-1', 
    'traverse-1-lin-304-1', 'traverse-1-lin-305-1', 'traverse-1-lin-306-1', 
    'traverse-1-lin-307-1'))
mdb.models['Model-1'].rootAssembly.LinearInstancePattern(direction1=(1.0, 0.0, 
    0.0), direction2=(0.0, 1.0, 0.0), instanceList=('traverse-1', ), number1=
    285, number2=1, spacing1=0.7, spacing2=0.5)
# Save by mofid on 2024_12_27-12.32.08; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-25'].submit(consistencyChecking=OFF)
mdb.jobs['Job-25']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-25'})
mdb.jobs['Job-25']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName\\Job-25.odb', 'jobName': 'Job-25'})
mdb.jobs['Job-25']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-25'})
mdb.jobs['Job-25']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 7368, 'jobName': 'Job-25'})
mdb.jobs['Job-25']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-25'})
mdb.jobs['Job-25']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-25'})
mdb.jobs['Job-25']._Message(WARNING, {'phase': STANDARD_PHASE, 
    'message': 'THERE ARE 289 UNCONNECTED REGIONS IN THE MODEL.', 
    'jobName': 'Job-25'})
mdb.jobs['Job-25']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-25', 'memory': 95.0})
mdb.jobs['Job-25']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8118.0, 'jobName': 'Job-25'})
mdb.jobs['Job-25']._Message(MINIMUM_MEMORY, {'minimum_memory': 36.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-25'})
mdb.jobs['Job-25']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-25'})
mdb.jobs['Job-25']._Message(STATUS, {'totalTime': 2e-06, 'attempts': 1, 
    'timeIncrement': 2e-06, 'increment': 1, 'stepTime': 2e-06, 'step': 1, 
    'jobName': 'Job-25', 'severe': 1, 'iterations': 2, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['Job-25']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-25'})
mdb.jobs['Job-25']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-25'})
mdb.jobs['Job-25']._Message(JOB_COMPLETED, {'time': 'Fri Dec 27 12:32:48 2024', 
    'jobName': 'Job-25'})
# Save by mofid on 2024_12_27-12.37.41; build 2023 2022_09_28-21.41.55 183150
